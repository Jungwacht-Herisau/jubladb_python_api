openapi: 3.0.1
info:
  title: Hitobito JSON:API
  version: v1
  contact:
    email: oss@basilbader.com
    name: Basil Bader
    url: https://github.com/Jungwacht-Herisau/jubladb_python_api
components:
  securitySchemes:
    ServiceTokenAuthHeader:
      type: apiKey
      in: header
      name: X-TOKEN
    ServiceTokenAuthParam:
      type: apiKey
      in: query
      name: token
    SessionAuth:
      type: apiKey
      in: cookie
      name: _session_id
  responses:
    '200':
      description: OK
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/jsonapi_info"
    '202':
      description: Accepted
    '204':
      description: No Content
    '400':
      description: Bad Request
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/jsonapi_failure"
    '401':
      description: Unauthorized
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/jsonapi_failure"
    '403':
      description: Forbidden
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/jsonapi_failure"
    '404':
      description: Not Found
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/jsonapi_failure"
    '409':
      description: Conflict
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/jsonapi_failure"
    '422':
      description: Unprocessable Entity
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/jsonapi_failure"
    additional_emails_200:
      description: 'OK: Additional email resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/additional_emails_single"
      links:
        getAdditionalEmailId:
          "$ref": "#/components/links/getAdditionalEmailId"
        updateAdditionalEmailId:
          "$ref": "#/components/links/updateAdditionalEmailId"
        deleteAdditionalEmailId:
          "$ref": "#/components/links/deleteAdditionalEmailId"
    additional_emails_200_collection:
      description: 'OK: Additional emails collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/additional_emails_collection"
    additional_emails_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/additional_emails_single"
      links:
        getAdditionalEmailId:
          "$ref": "#/components/links/getAdditionalEmailId"
        updateAdditionalEmailId:
          "$ref": "#/components/links/updateAdditionalEmailId"
        deleteAdditionalEmailId:
          "$ref": "#/components/links/deleteAdditionalEmailId"
    courses_200:
      description: 'OK: Course resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/courses_single"
      links:
        getEventCourseId:
          "$ref": "#/components/links/getEventCourseId"
        updateEventCourseId:
          "$ref": "#/components/links/updateEventCourseId"
        deleteEventCourseId:
          "$ref": "#/components/links/deleteEventCourseId"
    courses_200_collection:
      description: 'OK: Courses collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/courses_collection"
    courses_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/courses_single"
      links:
        getEventCourseId:
          "$ref": "#/components/links/getEventCourseId"
        updateEventCourseId:
          "$ref": "#/components/links/updateEventCourseId"
        deleteEventCourseId:
          "$ref": "#/components/links/deleteEventCourseId"
    dates_200:
      description: 'OK: Date resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/dates_single"
      links:
        getEventDateId:
          "$ref": "#/components/links/getEventDateId"
        updateEventDateId:
          "$ref": "#/components/links/updateEventDateId"
        deleteEventDateId:
          "$ref": "#/components/links/deleteEventDateId"
    dates_200_collection:
      description: 'OK: Dates collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/dates_collection"
    dates_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/dates_single"
      links:
        getEventDateId:
          "$ref": "#/components/links/getEventDateId"
        updateEventDateId:
          "$ref": "#/components/links/updateEventDateId"
        deleteEventDateId:
          "$ref": "#/components/links/deleteEventDateId"
    event_kind_categories_200:
      description: 'OK: Kind category resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/event_kind_categories_single"
      links:
        getEventKindCategoryId:
          "$ref": "#/components/links/getEventKindCategoryId"
        updateEventKindCategoryId:
          "$ref": "#/components/links/updateEventKindCategoryId"
        deleteEventKindCategoryId:
          "$ref": "#/components/links/deleteEventKindCategoryId"
    event_kind_categories_200_collection:
      description: 'OK: Kind categories collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/event_kind_categories_collection"
    event_kind_categories_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/event_kind_categories_single"
      links:
        getEventKindCategoryId:
          "$ref": "#/components/links/getEventKindCategoryId"
        updateEventKindCategoryId:
          "$ref": "#/components/links/updateEventKindCategoryId"
        deleteEventKindCategoryId:
          "$ref": "#/components/links/deleteEventKindCategoryId"
    event_kinds_200:
      description: 'OK: Kind resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/event_kinds_single"
      links:
        getEventKindId:
          "$ref": "#/components/links/getEventKindId"
        updateEventKindId:
          "$ref": "#/components/links/updateEventKindId"
        deleteEventKindId:
          "$ref": "#/components/links/deleteEventKindId"
    event_kinds_200_collection:
      description: 'OK: Kinds collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/event_kinds_collection"
    event_kinds_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/event_kinds_single"
      links:
        getEventKindId:
          "$ref": "#/components/links/getEventKindId"
        updateEventKindId:
          "$ref": "#/components/links/updateEventKindId"
        deleteEventKindId:
          "$ref": "#/components/links/deleteEventKindId"
    events_200:
      description: 'OK: Event resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/events_single"
      links:
        getEventId:
          "$ref": "#/components/links/getEventId"
        updateEventId:
          "$ref": "#/components/links/updateEventId"
        deleteEventId:
          "$ref": "#/components/links/deleteEventId"
    events_200_collection:
      description: 'OK: Events collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/events_collection"
    events_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/events_single"
      links:
        getEventId:
          "$ref": "#/components/links/getEventId"
        updateEventId:
          "$ref": "#/components/links/updateEventId"
        deleteEventId:
          "$ref": "#/components/links/deleteEventId"
    groups_200:
      description: 'OK: Group resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/groups_single"
      links:
        getGroupId:
          "$ref": "#/components/links/getGroupId"
        updateGroupId:
          "$ref": "#/components/links/updateGroupId"
        deleteGroupId:
          "$ref": "#/components/links/deleteGroupId"
    groups_200_collection:
      description: 'OK: Groups collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/groups_collection"
    groups_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/groups_single"
      links:
        getGroupId:
          "$ref": "#/components/links/getGroupId"
        updateGroupId:
          "$ref": "#/components/links/updateGroupId"
        deleteGroupId:
          "$ref": "#/components/links/deleteGroupId"
    invoice_items_200:
      description: 'OK: Invoice item resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/invoice_items_single"
      links:
        getInvoiceItemId:
          "$ref": "#/components/links/getInvoiceItemId"
        updateInvoiceItemId:
          "$ref": "#/components/links/updateInvoiceItemId"
        deleteInvoiceItemId:
          "$ref": "#/components/links/deleteInvoiceItemId"
    invoice_items_200_collection:
      description: 'OK: Invoice items collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/invoice_items_collection"
    invoice_items_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/invoice_items_single"
      links:
        getInvoiceItemId:
          "$ref": "#/components/links/getInvoiceItemId"
        updateInvoiceItemId:
          "$ref": "#/components/links/updateInvoiceItemId"
        deleteInvoiceItemId:
          "$ref": "#/components/links/deleteInvoiceItemId"
    invoices_200:
      description: 'OK: Invoice resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/invoices_single"
      links:
        getInvoiceId:
          "$ref": "#/components/links/getInvoiceId"
        updateInvoiceId:
          "$ref": "#/components/links/updateInvoiceId"
        deleteInvoiceId:
          "$ref": "#/components/links/deleteInvoiceId"
    invoices_200_collection:
      description: 'OK: Invoices collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/invoices_collection"
    invoices_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/invoices_single"
      links:
        getInvoiceId:
          "$ref": "#/components/links/getInvoiceId"
        updateInvoiceId:
          "$ref": "#/components/links/updateInvoiceId"
        deleteInvoiceId:
          "$ref": "#/components/links/deleteInvoiceId"
    person-name_200:
      description: 'OK: Name resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/person-name_single"
      links:
        getPersonNameId:
          "$ref": "#/components/links/getPersonNameId"
        updatePersonNameId:
          "$ref": "#/components/links/updatePersonNameId"
        deletePersonNameId:
          "$ref": "#/components/links/deletePersonNameId"
    person-name_200_collection:
      description: 'OK: Names collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/person-name_collection"
    person-name_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/person-name_single"
      links:
        getPersonNameId:
          "$ref": "#/components/links/getPersonNameId"
        updatePersonNameId:
          "$ref": "#/components/links/updatePersonNameId"
        deletePersonNameId:
          "$ref": "#/components/links/deletePersonNameId"
    people_200:
      description: 'OK: Person resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/people_single"
      links:
        getPersonId:
          "$ref": "#/components/links/getPersonId"
        updatePersonId:
          "$ref": "#/components/links/updatePersonId"
        deletePersonId:
          "$ref": "#/components/links/deletePersonId"
    people_200_collection:
      description: 'OK: People collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/people_collection"
    people_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/people_single"
      links:
        getPersonId:
          "$ref": "#/components/links/getPersonId"
        updatePersonId:
          "$ref": "#/components/links/updatePersonId"
        deletePersonId:
          "$ref": "#/components/links/deletePersonId"
    phone_numbers_200:
      description: 'OK: Phone number resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/phone_numbers_single"
      links:
        getPhoneNumberId:
          "$ref": "#/components/links/getPhoneNumberId"
        updatePhoneNumberId:
          "$ref": "#/components/links/updatePhoneNumberId"
        deletePhoneNumberId:
          "$ref": "#/components/links/deletePhoneNumberId"
    phone_numbers_200_collection:
      description: 'OK: Phone numbers collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/phone_numbers_collection"
    phone_numbers_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/phone_numbers_single"
      links:
        getPhoneNumberId:
          "$ref": "#/components/links/getPhoneNumberId"
        updatePhoneNumberId:
          "$ref": "#/components/links/updatePhoneNumberId"
        deletePhoneNumberId:
          "$ref": "#/components/links/deletePhoneNumberId"
    roles_200:
      description: 'OK: Role resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/roles_single"
      links:
        getRoleId:
          "$ref": "#/components/links/getRoleId"
        updateRoleId:
          "$ref": "#/components/links/updateRoleId"
        deleteRoleId:
          "$ref": "#/components/links/deleteRoleId"
    roles_200_collection:
      description: 'OK: Roles collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/roles_collection"
    roles_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/roles_single"
      links:
        getRoleId:
          "$ref": "#/components/links/getRoleId"
        updateRoleId:
          "$ref": "#/components/links/updateRoleId"
        deleteRoleId:
          "$ref": "#/components/links/deleteRoleId"
    social_accounts_200:
      description: 'OK: Social account resource'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/social_accounts_single"
      links:
        getSocialAccountId:
          "$ref": "#/components/links/getSocialAccountId"
        updateSocialAccountId:
          "$ref": "#/components/links/updateSocialAccountId"
        deleteSocialAccountId:
          "$ref": "#/components/links/deleteSocialAccountId"
    social_accounts_200_collection:
      description: 'OK: Social accounts collection'
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/social_accounts_collection"
    social_accounts_201:
      description: Created
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/social_accounts_single"
      links:
        getSocialAccountId:
          "$ref": "#/components/links/getSocialAccountId"
        updateSocialAccountId:
          "$ref": "#/components/links/updateSocialAccountId"
        deleteSocialAccountId:
          "$ref": "#/components/links/deleteSocialAccountId"
  schemas:
    types:
      type: string
      enum:
      - additional_emails
      - courses
      - dates
      - event_kind_categories
      - event_kinds
      - events
      - groups
      - invoice_items
      - invoices
      - person-name
      - people
      - phone_numbers
      - roles
      - social_accounts
    additional_emails:
      type: object
      description: Additional email attributes
      properties:
        label:
          type: string
        public:
          type: boolean
        contactable_id:
          type: integer
        contactable_type:
          type: string
        email:
          type: string
      additionalProperties: false
    additional_emails_relationships:
      "$ref": "#/components/schemas/jsonapi_relationships"
    additional_emails_resource:
      type: object
      properties:
        id:
          type: string
          example: '46'
        type:
          type: string
          enum:
          - additional_emails
        attributes:
          "$ref": "#/components/schemas/additional_emails"
        relationships:
          "$ref": "#/components/schemas/additional_emails_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    additional_emails_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/additional_emails_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    additional_emails_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/additional_emails_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    additional_emails_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/additional_emails_resource"
    additional_emails_readable_attribute:
      description: Additional email readable attributes
      type: string
      enum:
      - id
      - label
      - public
      - contactable_id
      - contactable_type
      - email
    additional_emails_sortable_attributes_list:
      description: Additional email sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
        - label
        - "-label"
        - public
        - "-public"
        - contactable_id
        - "-contactable_id"
        - contactable_type
        - "-contactable_type"
        - email
        - "-email"
      uniqueItems: true
    additional_emails_related:
      description: Additional email relationships available for inclusion
      type: array
      items:
        type: string
      uniqueItems: true
      nullable: true
    courses:
      type: object
      description: Course attributes
      properties:
        group_ids:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        kind_id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        application_conditions:
          type: string
          readOnly: true
        motto:
          type: string
          readOnly: true
        cost:
          type: string
          readOnly: true
        location:
          type: string
          readOnly: true
        application_opening_at:
          type: string
          format: date
          readOnly: true
        application_closing_at:
          type: string
          format: date
          readOnly: true
        application_contact_id:
          type: integer
          readOnly: true
        external_application_link:
          type: string
          readOnly: true
        maximum_participants:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        state:
          type: string
          readOnly: true
        training_days:
          type: number
          format: float
          readOnly: true
        applicant_count:
          type: integer
          readOnly: true
        participant_count:
          type: integer
          readOnly: true
        minimum_participants:
          type: integer
          readOnly: true
        number:
          type: string
          readOnly: true
        teamer_count:
          type: integer
          readOnly: true
      additionalProperties: false
    courses_relationships:
      type: object
      properties:
        contact:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        kind:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        dates:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        leaders:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    courses_resource:
      type: object
      properties:
        id:
          type: string
          example: '77'
        type:
          type: string
          enum:
          - courses
        attributes:
          "$ref": "#/components/schemas/courses"
        relationships:
          "$ref": "#/components/schemas/courses_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    courses_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/courses_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    courses_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/courses_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    courses_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/courses_resource"
    courses_readable_attribute:
      description: Course readable attributes
      type: string
      enum:
      - id
      - group_ids
      - type
      - kind_id
      - name
      - description
      - application_conditions
      - motto
      - cost
      - location
      - application_opening_at
      - application_closing_at
      - application_contact_id
      - external_application_link
      - maximum_participants
      - created_at
      - updated_at
      - state
      - training_days
      - applicant_count
      - participant_count
      - minimum_participants
      - number
      - teamer_count
    courses_sortable_attributes_list:
      description: Course sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
      uniqueItems: true
    courses_related:
      description: Course relationships available for inclusion
      type: array
      items:
        type: string
        enum:
        - contact
        - kind
        - dates
        - leaders
      uniqueItems: true
    dates:
      type: object
      description: Date attributes
      properties:
        event_id:
          type: integer
          readOnly: true
        label:
          type: string
          readOnly: true
        location:
          type: string
          readOnly: true
        start_at:
          type: string
          format: date-time
          readOnly: true
        finish_at:
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
    dates_relationships:
      type: object
      properties:
        event:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    dates_resource:
      type: object
      properties:
        id:
          type: string
          example: '46'
        type:
          type: string
          enum:
          - dates
        attributes:
          "$ref": "#/components/schemas/dates"
        relationships:
          "$ref": "#/components/schemas/dates_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    dates_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/dates_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    dates_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/dates_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    dates_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/dates_resource"
    dates_readable_attribute:
      description: Date readable attributes
      type: string
      enum:
      - id
      - event_id
      - label
      - location
      - start_at
      - finish_at
    dates_sortable_attributes_list:
      description: Date sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
      uniqueItems: true
    dates_related:
      description: Date relationships available for inclusion
      type: array
      items:
        type: string
        enum:
        - event
      uniqueItems: true
    event_kind_categories:
      type: object
      description: Kind category attributes
      properties:
        label:
          type: string
          readOnly: true
        order:
          type: integer
          readOnly: true
      additionalProperties: false
    event_kind_categories_relationships:
      "$ref": "#/components/schemas/jsonapi_relationships"
    event_kind_categories_resource:
      type: object
      properties:
        id:
          type: string
          example: '33'
        type:
          type: string
          enum:
          - event_kind_categories
        attributes:
          "$ref": "#/components/schemas/event_kind_categories"
        relationships:
          "$ref": "#/components/schemas/event_kind_categories_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    event_kind_categories_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/event_kind_categories_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    event_kind_categories_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/event_kind_categories_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    event_kind_categories_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/event_kind_categories_resource"
    event_kind_categories_readable_attribute:
      description: Kind category readable attributes
      type: string
      enum:
      - id
      - label
      - order
    event_kind_categories_sortable_attributes_list:
      description: Kind category sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
      uniqueItems: true
    event_kind_categories_related:
      description: Kind category relationships available for inclusion
      type: array
      items:
        type: string
      uniqueItems: true
      nullable: true
    event_kinds:
      type: object
      description: Kind attributes
      properties:
        label:
          type: string
          readOnly: true
        short_name:
          type: string
          readOnly: true
        general_information:
          type: string
          readOnly: true
        application_conditions:
          type: string
          readOnly: true
        minimum_age:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
    event_kinds_relationships:
      type: object
      properties:
        kind_category:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    event_kinds_resource:
      type: object
      properties:
        id:
          type: string
          example: '44'
        type:
          type: string
          enum:
          - event_kinds
        attributes:
          "$ref": "#/components/schemas/event_kinds"
        relationships:
          "$ref": "#/components/schemas/event_kinds_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    event_kinds_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/event_kinds_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    event_kinds_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/event_kinds_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    event_kinds_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/event_kinds_resource"
    event_kinds_readable_attribute:
      description: Kind readable attributes
      type: string
      enum:
      - id
      - label
      - short_name
      - general_information
      - application_conditions
      - minimum_age
      - created_at
      - updated_at
    event_kinds_sortable_attributes_list:
      description: Kind sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
      uniqueItems: true
    event_kinds_related:
      description: Kind relationships available for inclusion
      type: array
      items:
        type: string
        enum:
        - kind_category
      uniqueItems: true
    events:
      type: object
      description: Event attributes
      properties:
        group_ids:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        kind_id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        application_conditions:
          type: string
          readOnly: true
        motto:
          type: string
          readOnly: true
        cost:
          type: string
          readOnly: true
        location:
          type: string
          readOnly: true
        application_opening_at:
          type: string
          format: date
          readOnly: true
        application_closing_at:
          type: string
          format: date
          readOnly: true
        application_contact_id:
          type: integer
          readOnly: true
        external_application_link:
          type: string
          readOnly: true
        maximum_participants:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
    events_relationships:
      type: object
      properties:
        contact:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        kind:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        dates:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    events_resource:
      type: object
      properties:
        id:
          type: string
          example: '5'
        type:
          type: string
          enum:
          - events
        attributes:
          "$ref": "#/components/schemas/events"
        relationships:
          "$ref": "#/components/schemas/events_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    events_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/events_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    events_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/events_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    events_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/events_resource"
    events_readable_attribute:
      description: Event readable attributes
      type: string
      enum:
      - id
      - group_ids
      - type
      - kind_id
      - name
      - description
      - application_conditions
      - motto
      - cost
      - location
      - application_opening_at
      - application_closing_at
      - application_contact_id
      - external_application_link
      - maximum_participants
      - created_at
      - updated_at
    events_sortable_attributes_list:
      description: Event sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
      uniqueItems: true
    events_related:
      description: Event relationships available for inclusion
      type: array
      items:
        type: string
        enum:
        - contact
        - kind
        - dates
      uniqueItems: true
    groups:
      type: object
      description: Group attributes
      properties:
        name:
          type: string
          readOnly: true
        short_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        layer:
          type: boolean
          readOnly: true
        parent_id:
          type: integer
          readOnly: true
        layer_group_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        address:
          type: string
          readOnly: true
        zip_code:
          type: integer
          readOnly: true
        town:
          type: string
          readOnly: true
        country:
          type: string
          readOnly: true
        require_person_add_requests:
          type: boolean
          readOnly: true
        self_registration_url:
          type: string
          readOnly: true
        archived_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
        logo:
          type: string
          description: |2
             This *extra field* will only be present if requested explicitely with the `extra_fields[groups]` parameter.
            See [Graphiti Resource Extra fields](https://www.graphiti.dev/guides/concepts/resources#extra-fields) for more information.
          readOnly: true
      additionalProperties: false
    groups_relationships:
      type: object
      properties:
        contact:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        creator:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        updater:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        deleter:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        parent:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        layer_group:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        phone_numbers:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        social_accounts:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        additional_emails:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    groups_resource:
      type: object
      properties:
        id:
          type: string
          example: '45'
        type:
          type: string
          enum:
          - groups
        attributes:
          "$ref": "#/components/schemas/groups"
        relationships:
          "$ref": "#/components/schemas/groups_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    groups_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/groups_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    groups_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/groups_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    groups_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/groups_resource"
    groups_readable_attribute:
      description: Group readable attributes
      type: string
      enum:
      - id
      - name
      - short_name
      - display_name
      - description
      - layer
      - parent_id
      - layer_group_id
      - type
      - email
      - address
      - zip_code
      - town
      - country
      - require_person_add_requests
      - self_registration_url
      - archived_at
      - created_at
      - updated_at
      - deleted_at
    groups_sortable_attributes_list:
      description: Group sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
        - name
        - "-name"
        - short_name
        - "-short_name"
        - display_name
        - "-display_name"
        - description
        - "-description"
        - layer
        - "-layer"
        - parent_id
        - "-parent_id"
        - layer_group_id
        - "-layer_group_id"
        - type
        - "-type"
        - email
        - "-email"
        - address
        - "-address"
        - zip_code
        - "-zip_code"
        - town
        - "-town"
        - country
        - "-country"
        - require_person_add_requests
        - "-require_person_add_requests"
        - self_registration_url
        - "-self_registration_url"
        - archived_at
        - "-archived_at"
        - created_at
        - "-created_at"
        - updated_at
        - "-updated_at"
        - deleted_at
        - "-deleted_at"
      uniqueItems: true
    groups_related:
      description: Group relationships available for inclusion
      type: array
      items:
        type: string
        enum:
        - contact
        - creator
        - updater
        - deleter
        - parent
        - layer_group
        - phone_numbers
        - social_accounts
        - additional_emails
      uniqueItems: true
    groups_extra_attribute:
      description: Group extra attributes
      type: string
      enum:
      - logo
    invoice_items:
      type: object
      description: Invoice item attributes
      properties:
        invoice_id:
          type: integer
        name:
          type: string
        description:
          type: string
        unit_cost:
          type: number
          format: float
        vat_rate:
          type: number
          format: float
        cost:
          type: integer
        count:
          type: integer
        cost_center:
          type: string
        account:
          type: string
      additionalProperties: false
    invoice_items_relationships:
      type: object
      properties:
        invoice:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    invoice_items_resource:
      type: object
      properties:
        id:
          type: string
          example: '52'
        type:
          type: string
          enum:
          - invoice_items
        attributes:
          "$ref": "#/components/schemas/invoice_items"
        relationships:
          "$ref": "#/components/schemas/invoice_items_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    invoice_items_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/invoice_items_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    invoice_items_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/invoice_items_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    invoice_items_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/invoice_items_resource"
    invoice_items_readable_attribute:
      description: Invoice item readable attributes
      type: string
      enum:
      - id
      - invoice_id
      - name
      - description
      - unit_cost
      - vat_rate
      - cost
      - count
      - cost_center
      - account
    invoice_items_sortable_attributes_list:
      description: Invoice item sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
      uniqueItems: true
    invoice_items_related:
      description: Invoice item relationships available for inclusion
      type: array
      items:
        type: string
        enum:
        - invoice
      uniqueItems: true
    invoices:
      type: object
      description: Invoice attributes
      properties:
        title:
          type: string
        description:
          type: string
        state:
          type: string
        group_id:
          type: integer
        recipient_id:
          type: integer
        due_at:
          type: string
          format: date
        issued_at:
          type: string
          format: date
        recipient_email:
          type: string
        payment_information:
          type: string
        payment_purpose:
          type: string
        hide_total:
          type: boolean
      additionalProperties: false
    invoices_relationships:
      type: object
      properties:
        group:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        recipient:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        invoice_items:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    invoices_resource:
      type: object
      properties:
        id:
          type: string
          example: '44'
        type:
          type: string
          enum:
          - invoices
        attributes:
          "$ref": "#/components/schemas/invoices"
        relationships:
          "$ref": "#/components/schemas/invoices_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    invoices_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/invoices_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    invoices_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/invoices_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    invoices_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/invoices_resource"
    invoices_readable_attribute:
      description: Invoice readable attributes
      type: string
      enum:
      - id
      - title
      - description
      - state
      - group_id
      - recipient_id
      - due_at
      - issued_at
      - recipient_email
      - payment_information
      - payment_purpose
      - hide_total
    invoices_sortable_attributes_list:
      description: Invoice sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
      uniqueItems: true
    invoices_related:
      description: Invoice relationships available for inclusion
      type: array
      items:
        type: string
        enum:
        - group
        - recipient
        - invoice_items
      uniqueItems: true
    person-name:
      type: object
      description: Name attributes
      properties:
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
      additionalProperties: false
    person-name_relationships:
      "$ref": "#/components/schemas/jsonapi_relationships"
    person-name_resource:
      type: object
      properties:
        id:
          type: string
          example: '87'
        type:
          type: string
          enum:
          - person-name
        attributes:
          "$ref": "#/components/schemas/person-name"
        relationships:
          "$ref": "#/components/schemas/person-name_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    person-name_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/person-name_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    person-name_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/person-name_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    person-name_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/person-name_resource"
    person-name_readable_attribute:
      description: Name readable attributes
      type: string
      enum:
      - id
      - first_name
      - last_name
    person-name_sortable_attributes_list:
      description: Name sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
      uniqueItems: true
    person-name_related:
      description: Name relationships available for inclusion
      type: array
      items:
        type: string
      uniqueItems: true
      nullable: true
    people:
      type: object
      description: Person attributes
      properties:
        first_name:
          type: string
        last_name:
          type: string
        nickname:
          type: string
        company_name:
          type: string
        company:
          type: boolean
        email:
          type: string
        address:
          type: string
        zip_code:
          type: string
        town:
          type: string
        country:
          type: string
        primary_group_id:
          type: integer
          readOnly: true
        gender:
          type: string
        birthday:
          type: string
          format: date
        language:
          type: string
      additionalProperties: false
    people_relationships:
      type: object
      properties:
        primary_group:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        layer_group:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        roles:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        phone_numbers:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        social_accounts:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        additional_emails:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToMany"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    people_resource:
      type: object
      properties:
        id:
          type: string
          example: '33'
        type:
          type: string
          enum:
          - people
        attributes:
          "$ref": "#/components/schemas/people"
        relationships:
          "$ref": "#/components/schemas/people_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    people_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/people_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    people_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/people_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    people_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/people_resource"
    people_readable_attribute:
      description: Person readable attributes
      type: string
      enum:
      - id
      - first_name
      - last_name
      - nickname
      - company_name
      - company
      - email
      - address
      - zip_code
      - town
      - country
      - primary_group_id
      - gender
      - birthday
      - language
    people_sortable_attributes_list:
      description: Person sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
        - first_name
        - "-first_name"
        - last_name
        - "-last_name"
        - nickname
        - "-nickname"
        - company_name
        - "-company_name"
        - company
        - "-company"
        - email
        - "-email"
        - address
        - "-address"
        - zip_code
        - "-zip_code"
        - town
        - "-town"
        - country
        - "-country"
        - primary_group_id
        - "-primary_group_id"
        - gender
        - "-gender"
        - birthday
        - "-birthday"
        - language
        - "-language"
      uniqueItems: true
    people_related:
      description: Person relationships available for inclusion
      type: array
      items:
        type: string
        enum:
        - primary_group
        - layer_group
        - roles
        - phone_numbers
        - social_accounts
        - additional_emails
      uniqueItems: true
    phone_numbers:
      type: object
      description: Phone number attributes
      properties:
        label:
          type: string
        public:
          type: boolean
        contactable_id:
          type: integer
        contactable_type:
          type: string
        number:
          type: string
      additionalProperties: false
    phone_numbers_relationships:
      "$ref": "#/components/schemas/jsonapi_relationships"
    phone_numbers_resource:
      type: object
      properties:
        id:
          type: string
          example: '70'
        type:
          type: string
          enum:
          - phone_numbers
        attributes:
          "$ref": "#/components/schemas/phone_numbers"
        relationships:
          "$ref": "#/components/schemas/phone_numbers_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    phone_numbers_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/phone_numbers_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    phone_numbers_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/phone_numbers_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    phone_numbers_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/phone_numbers_resource"
    phone_numbers_readable_attribute:
      description: Phone number readable attributes
      type: string
      enum:
      - id
      - label
      - public
      - contactable_id
      - contactable_type
      - number
    phone_numbers_sortable_attributes_list:
      description: Phone number sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
        - label
        - "-label"
        - public
        - "-public"
        - contactable_id
        - "-contactable_id"
        - contactable_type
        - "-contactable_type"
        - number
        - "-number"
      uniqueItems: true
    phone_numbers_related:
      description: Phone number relationships available for inclusion
      type: array
      items:
        type: string
      uniqueItems: true
      nullable: true
    roles:
      type: object
      description: Role attributes
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        start_on:
          type: string
          format: date
          readOnly: true
        end_on:
          type: string
          format: date
          readOnly: true
        person_id:
          type: integer
        group_id:
          type: integer
        type:
          type: string
        label:
          type: string
      additionalProperties: false
    roles_relationships:
      type: object
      properties:
        person:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        group:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
        layer_group:
          type: object
          properties:
            links:
              "$ref": "#/components/schemas/jsonapi_relationshipLinks"
            data:
              "$ref": "#/components/schemas/jsonapi_relationshipToOne"
            meta:
              "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    roles_resource:
      type: object
      properties:
        id:
          type: string
          example: '10'
        type:
          type: string
          enum:
          - roles
        attributes:
          "$ref": "#/components/schemas/roles"
        relationships:
          "$ref": "#/components/schemas/roles_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    roles_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/roles_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    roles_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/roles_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    roles_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/roles_resource"
    roles_readable_attribute:
      description: Role readable attributes
      type: string
      enum:
      - id
      - created_at
      - updated_at
      - start_on
      - end_on
      - person_id
      - group_id
      - type
      - label
    roles_sortable_attributes_list:
      description: Role sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
        - created_at
        - "-created_at"
        - updated_at
        - "-updated_at"
        - start_on
        - "-start_on"
        - end_on
        - "-end_on"
        - person_id
        - "-person_id"
        - group_id
        - "-group_id"
        - type
        - "-type"
        - label
        - "-label"
      uniqueItems: true
    roles_related:
      description: Role relationships available for inclusion
      type: array
      items:
        type: string
        enum:
        - person
        - group
        - layer_group
      uniqueItems: true
    social_accounts:
      type: object
      description: Social account attributes
      properties:
        label:
          type: string
        public:
          type: boolean
        contactable_id:
          type: integer
        contactable_type:
          type: string
        name:
          type: string
      additionalProperties: false
    social_accounts_relationships:
      "$ref": "#/components/schemas/jsonapi_relationships"
    social_accounts_resource:
      type: object
      properties:
        id:
          type: string
          example: '83'
        type:
          type: string
          enum:
          - social_accounts
        attributes:
          "$ref": "#/components/schemas/social_accounts"
        relationships:
          "$ref": "#/components/schemas/social_accounts_relationships"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    social_accounts_single:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/social_accounts_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    social_accounts_collection:
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/social_accounts_resource"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    social_accounts_request:
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/social_accounts_resource"
    social_accounts_readable_attribute:
      description: Social account readable attributes
      type: string
      enum:
      - id
      - label
      - public
      - contactable_id
      - contactable_type
      - name
    social_accounts_sortable_attributes_list:
      description: Social account sortable attributes
      type: array
      items:
        type: string
        enum:
        - id
        - "-id"
        - label
        - "-label"
        - public
        - "-public"
        - contactable_id
        - "-contactable_id"
        - contactable_type
        - "-contactable_type"
        - name
        - "-name"
      uniqueItems: true
    social_accounts_related:
      description: Social account relationships available for inclusion
      type: array
      items:
        type: string
      uniqueItems: true
      nullable: true
    jsonapi_success:
      type: object
      required:
      - data
      properties:
        data:
          "$ref": "#/components/schemas/jsonapi_data"
        included:
          description: To reduce the number of HTTP requests, servers **MAY** allow
            responses that include related resources along with the requested primary
            resources. Such responses are called "compound documents".
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_resource"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          description: Link members related to the primary data.
          allOf:
          - "$ref": "#/components/schemas/jsonapi_links"
          - "$ref": "#/components/schemas/jsonapi_pagination"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    jsonapi_failure:
      type: object
      required:
      - errors
      properties:
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/jsonapi_error"
          uniqueItems: true
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
      additionalProperties: false
    jsonapi_info:
      type: object
      required:
      - meta
      properties:
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        links:
          "$ref": "#/components/schemas/jsonapi_links"
        jsonapi:
          "$ref": "#/components/schemas/jsonapi_jsonapi"
      additionalProperties: false
    jsonapi_data:
      description: The document's "primary data" is a representation of the resource
        or collection of resources targeted by a request.
      oneOf:
      - "$ref": "#/components/schemas/jsonapi_resource"
      - description: An array of resource objects, an array of resource identifier
          objects, or an empty array ([]), for requests that target resource collections.
        type: array
        items:
          "$ref": "#/components/schemas/jsonapi_resource"
        uniqueItems: true
      - description: null if the request is one that might correspond to a single
          resource, but doesn't currently.
        nullable: true
    jsonapi_resource:
      type: object
      oneOf:
      - "$ref": "#/components/schemas/additional_emails_resource"
      - "$ref": "#/components/schemas/courses_resource"
      - "$ref": "#/components/schemas/dates_resource"
      - "$ref": "#/components/schemas/event_kind_categories_resource"
      - "$ref": "#/components/schemas/event_kinds_resource"
      - "$ref": "#/components/schemas/events_resource"
      - "$ref": "#/components/schemas/groups_resource"
      - "$ref": "#/components/schemas/invoice_items_resource"
      - "$ref": "#/components/schemas/invoices_resource"
      - "$ref": "#/components/schemas/person-name_resource"
      - "$ref": "#/components/schemas/people_resource"
      - "$ref": "#/components/schemas/phone_numbers_resource"
      - "$ref": "#/components/schemas/roles_resource"
      - "$ref": "#/components/schemas/social_accounts_resource"
    jsonapi_link:
      description: 'A link **MUST** be represented as either: a string containing
        the link''s URL or a link object.'
      oneOf:
      - description: A string containing the link's URL.
        type: string
        format: uri-reference
      - type: object
        required:
        - href
        properties:
          href:
            description: A string containing the link's URL.
            type: string
            format: uri-reference
          meta:
            "$ref": "#/components/schemas/jsonapi_meta"
    jsonapi_relationships:
      description: Members of the relationships object ("relationships") represent
        references from the resource object in which it's defined to other resource
        objects.
      type: object
      additionalProperties: false
    jsonapi_relationshipToOne:
      description: References to other resource objects in a to-one ("relationship").
        Relationships can be specified by including a member in a resource's links
        object.
      oneOf:
      - "$ref": "#/components/schemas/jsonapi_linkage"
      - nullable: true
    jsonapi_relationshipToMany:
      description: An array of objects each containing "type" and "id" members for
        to-many relationships.
      type: array
      items:
        "$ref": "#/components/schemas/jsonapi_linkage"
      uniqueItems: true
    jsonapi_linkage:
      description: The "type" and "id" to non-empty members.
      type: object
      required:
      - type
      - id
      properties:
        type:
          "$ref": "#/components/schemas/types"
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
        id:
          type: string
          example: '12'
      additionalProperties: false
    jsonapi_pagination:
      type: object
      properties:
        first:
          description: The first page of data
          oneOf:
          - "$ref": "#/components/schemas/jsonapi_link"
          - nullable: true
        last:
          description: The last page of data
          oneOf:
          - "$ref": "#/components/schemas/jsonapi_link"
          - nullable: true
        prev:
          description: The previous page of data
          oneOf:
          - "$ref": "#/components/schemas/jsonapi_link"
          - nullable: true
        next:
          description: The next page of data
          oneOf:
          - "$ref": "#/components/schemas/jsonapi_link"
          - nullable: true
    jsonapi_jsonapi:
      description: An object describing the server's implementation
      type: object
      properties:
        version:
          type: string
          example: '1.0'
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    jsonapi_error:
      type: object
      properties:
        links:
          "$ref": "#/components/schemas/jsonapi_links"
        status:
          description: The HTTP status code applicable to this problem, expressed
            as a string value.
          type: string
        code:
          description: An application-specific error code, expressed as a string value.
          type: string
        title:
          description: A short, human-readable summary of the problem. It **SHOULD
            NOT** change from occurrence to occurrence of the problem, except for
            purposes of localization.
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        source:
          type: object
          properties:
            pointer:
              description: A JSON Pointer [RFC6901] to the associated entity in the
                request document [e.g. "/data" for a primary data object, or "/data/attributes/title"
                for a specific attribute].
              type: string
            parameter:
              description: A string indicating which query parameter caused the error.
              type: string
        meta:
          "$ref": "#/components/schemas/jsonapi_meta"
      additionalProperties: false
    jsonapi_meta:
      oneOf:
      - nullable: true
      - description: Non-standard meta-information that can not be represented as
          an attribute or relationship.
        type: object
        additionalProperties: true
    jsonapi_links:
      oneOf:
      - nullable: true
      - type: object
        additionalProperties:
          "$ref": "#/components/schemas/jsonapi_link"
    jsonapi_relationshipLinks:
      oneOf:
      - nullable: true
      - description: A resource object **MAY** contain references to other resource
          objects ("relationships"). Relationships may be to-one or to-many. Relationships
          can be specified by including a member in a resource's links object.
        type: object
        properties:
          self:
            "$ref": "#/components/schemas/jsonapi_link"
          related:
            "$ref": "#/components/schemas/jsonapi_link"
        additionalProperties: true
  parameters:
    additional_emails_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    additional_emails_fields:
      in: query
      schema:
        description: Additional email readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/additional_emails_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[additional_emails]
      description: "[Include only specified fields of Additional email in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    additional_emails_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/additional_emails_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort additional_emails according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    additional_emails_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Additional email by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Additional email by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Additional email by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Additional email by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Additional email by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Additional email by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_label_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][eq]
      description: "[Filter Additional email by label using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_label_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_eq]
      description: "[Filter Additional email by label using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_label_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][eql]
      description: "[Filter Additional email by label using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_label_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_eql]
      description: "[Filter Additional email by label using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_label_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][prefix]
      description: "[Filter Additional email by label using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_label_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_prefix]
      description: "[Filter Additional email by label using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_label_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][suffix]
      description: "[Filter Additional email by label using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_label_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_suffix]
      description: "[Filter Additional email by label using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_label_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][match]
      description: "[Filter Additional email by label using match operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_label_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_match]
      description: "[Filter Additional email by label using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_public_eq:
      in: query
      schema:
        type: boolean
      explode: false
      name: filter[public][eq]
      description: "[Filter Additional email by public using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][eq]
      description: "[Filter Additional email by contactable_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][not_eq]
      description: "[Filter Additional email by contactable_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][gt]
      description: "[Filter Additional email by contactable_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][gte]
      description: "[Filter Additional email by contactable_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][lt]
      description: "[Filter Additional email by contactable_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][lte]
      description: "[Filter Additional email by contactable_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_type_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][eq]
      description: "[Filter Additional email by contactable_type using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_type_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_eq]
      description: "[Filter Additional email by contactable_type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_type_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][eql]
      description: "[Filter Additional email by contactable_type using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_type_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_eql]
      description: "[Filter Additional email by contactable_type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_type_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][prefix]
      description: "[Filter Additional email by contactable_type using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_type_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_prefix]
      description: "[Filter Additional email by contactable_type using not_prefix
        operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_type_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][suffix]
      description: "[Filter Additional email by contactable_type using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_type_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_suffix]
      description: "[Filter Additional email by contactable_type using not_suffix
        operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_type_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][match]
      description: "[Filter Additional email by contactable_type using match operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_contactable_type_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_match]
      description: "[Filter Additional email by contactable_type using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_email_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][eq]
      description: "[Filter Additional email by email using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_email_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_eq]
      description: "[Filter Additional email by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_email_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][eql]
      description: "[Filter Additional email by email using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_email_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_eql]
      description: "[Filter Additional email by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_email_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][prefix]
      description: "[Filter Additional email by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_email_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_prefix]
      description: "[Filter Additional email by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_email_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][suffix]
      description: "[Filter Additional email by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_email_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_suffix]
      description: "[Filter Additional email by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_email_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][match]
      description: "[Filter Additional email by email using match operator](https://jsonapi.org/format/#fetching-filtering)"
    additional_emails_filter_email_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_match]
      description: "[Filter Additional email by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    courses_include:
      in: query
      schema:
        "$ref": "#/components/schemas/courses_related"
      explode: false
      name: include
      description: "[Include related resources](https://jsonapi.org/format/#fetching-includes)"
    courses_fields:
      in: query
      schema:
        description: Course readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/courses_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[courses]
      description: "[Include only specified fields of Course in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    courses_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/courses_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort event_courses according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    courses_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Course by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Course by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Course by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Course by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Course by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Course by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_kind_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][eq]
      description: "[Filter Course by kind_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_kind_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][not_eq]
      description: "[Filter Course by kind_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_kind_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][gt]
      description: "[Filter Course by kind_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_kind_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][gte]
      description: "[Filter Course by kind_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_kind_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][lt]
      description: "[Filter Course by kind_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_kind_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][lte]
      description: "[Filter Course by kind_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_updated_at_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][eq]
      description: "[Filter Course by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_updated_at_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][not_eq]
      description: "[Filter Course by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_updated_at_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][gt]
      description: "[Filter Course by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_updated_at_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][gte]
      description: "[Filter Course by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_updated_at_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][lt]
      description: "[Filter Course by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_updated_at_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][lte]
      description: "[Filter Course by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_type_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][eq]
      description: "[Filter Course by type using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_group_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][eq]
      description: "[Filter Course by group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_group_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][not_eq]
      description: "[Filter Course by group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_before_or_on_eq:
      in: query
      schema:
        type: string
        format: date
      explode: false
      name: filter[before_or_on][eq]
      description: "[Filter Course by before_or_on using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_after_or_on_eq:
      in: query
      schema:
        type: string
        format: date
      explode: false
      name: filter[after_or_on][eq]
      description: "[Filter Course by after_or_on using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_kind_category_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_category_id][eq]
      description: "[Filter Course by kind_category_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_state_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[state][eq]
      description: "[Filter Course by state using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_state_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[state][not_eq]
      description: "[Filter Course by state using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_state_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[state][eql]
      description: "[Filter Course by state using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_state_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[state][not_eql]
      description: "[Filter Course by state using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_state_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[state][prefix]
      description: "[Filter Course by state using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_state_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[state][not_prefix]
      description: "[Filter Course by state using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_state_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[state][suffix]
      description: "[Filter Course by state using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_state_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[state][not_suffix]
      description: "[Filter Course by state using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_state_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[state][match]
      description: "[Filter Course by state using match operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_state_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[state][not_match]
      description: "[Filter Course by state using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_number_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][eq]
      description: "[Filter Course by number using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_number_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][not_eq]
      description: "[Filter Course by number using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_number_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][eql]
      description: "[Filter Course by number using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_number_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][not_eql]
      description: "[Filter Course by number using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_number_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][prefix]
      description: "[Filter Course by number using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_number_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][not_prefix]
      description: "[Filter Course by number using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_number_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][suffix]
      description: "[Filter Course by number using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_number_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][not_suffix]
      description: "[Filter Course by number using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_number_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][match]
      description: "[Filter Course by number using match operator](https://jsonapi.org/format/#fetching-filtering)"
    courses_filter_number_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][not_match]
      description: "[Filter Course by number using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    dates_include:
      in: query
      schema:
        "$ref": "#/components/schemas/dates_related"
      explode: false
      name: include
      description: "[Include related resources](https://jsonapi.org/format/#fetching-includes)"
    dates_fields:
      in: query
      schema:
        description: Date readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/dates_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[dates]
      description: "[Include only specified fields of Date in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    dates_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/dates_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort event_dates according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    dates_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Date by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Date by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Date by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Date by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Date by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Date by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_event_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[event_id][eq]
      description: "[Filter Date by event_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_event_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[event_id][not_eq]
      description: "[Filter Date by event_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_event_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[event_id][gt]
      description: "[Filter Date by event_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_event_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[event_id][gte]
      description: "[Filter Date by event_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_event_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[event_id][lt]
      description: "[Filter Date by event_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    dates_filter_event_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[event_id][lte]
      description: "[Filter Date by event_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kind_categories_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    event_kind_categories_fields:
      in: query
      schema:
        description: Kind category readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/event_kind_categories_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[event_kind_categories]
      description: "[Include only specified fields of Kind category in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    event_kind_categories_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/event_kind_categories_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort event_kind_categories according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    event_kind_categories_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Kind category by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kind_categories_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Kind category by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kind_categories_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Kind category by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kind_categories_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Kind category by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kind_categories_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Kind category by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kind_categories_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Kind category by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kinds_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    event_kinds_include:
      in: query
      schema:
        "$ref": "#/components/schemas/event_kinds_related"
      explode: false
      name: include
      description: "[Include related resources](https://jsonapi.org/format/#fetching-includes)"
    event_kinds_fields:
      in: query
      schema:
        description: Kind readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/event_kinds_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[event_kinds]
      description: "[Include only specified fields of Kind in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    event_kinds_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/event_kinds_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort event_kinds according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    event_kinds_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Kind by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kinds_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Kind by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kinds_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Kind by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kinds_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Kind by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kinds_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Kind by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    event_kinds_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Kind by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    events_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    events_include:
      in: query
      schema:
        "$ref": "#/components/schemas/events_related"
      explode: false
      name: include
      description: "[Include related resources](https://jsonapi.org/format/#fetching-includes)"
    events_fields:
      in: query
      schema:
        description: Event readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/events_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[events]
      description: "[Include only specified fields of Event in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    events_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/events_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort events according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    events_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Event by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Event by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Event by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Event by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Event by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Event by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_kind_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][eq]
      description: "[Filter Event by kind_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_kind_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][not_eq]
      description: "[Filter Event by kind_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_kind_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][gt]
      description: "[Filter Event by kind_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_kind_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][gte]
      description: "[Filter Event by kind_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_kind_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][lt]
      description: "[Filter Event by kind_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_kind_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_id][lte]
      description: "[Filter Event by kind_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_updated_at_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][eq]
      description: "[Filter Event by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_updated_at_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][not_eq]
      description: "[Filter Event by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_updated_at_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][gt]
      description: "[Filter Event by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_updated_at_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][gte]
      description: "[Filter Event by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_updated_at_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][lt]
      description: "[Filter Event by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_updated_at_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][lte]
      description: "[Filter Event by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_type_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][eq]
      description: "[Filter Event by type using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_group_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][eq]
      description: "[Filter Event by group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_group_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][not_eq]
      description: "[Filter Event by group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_before_or_on_eq:
      in: query
      schema:
        type: string
        format: date
      explode: false
      name: filter[before_or_on][eq]
      description: "[Filter Event by before_or_on using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_after_or_on_eq:
      in: query
      schema:
        type: string
        format: date
      explode: false
      name: filter[after_or_on][eq]
      description: "[Filter Event by after_or_on using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    events_filter_kind_category_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[kind_category_id][eq]
      description: "[Filter Event by kind_category_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    groups_include:
      in: query
      schema:
        "$ref": "#/components/schemas/groups_related"
      explode: false
      name: include
      description: "[Include related resources](https://jsonapi.org/format/#fetching-includes)"
    groups_fields:
      in: query
      schema:
        description: Group readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/groups_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[groups]
      description: "[Include only specified fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    groups_extra_fields:
      in: query
      schema:
        description: Group extra attributes list
        type: array
        items:
          "$ref": "#/components/schemas/groups_extra_attribute"
        uniqueItems: true
      explode: false
      name: extra_fields[groups]
      description: "[Include specified extra fields of Group in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    groups_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/groups_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort groups according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    groups_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Group by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Group by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Group by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Group by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Group by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Group by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_name_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][eq]
      description: "[Filter Group by name using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_name_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][not_eq]
      description: "[Filter Group by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_name_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][eql]
      description: "[Filter Group by name using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_name_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][not_eql]
      description: "[Filter Group by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_name_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][prefix]
      description: "[Filter Group by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_name_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][not_prefix]
      description: "[Filter Group by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_name_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][suffix]
      description: "[Filter Group by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_name_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][not_suffix]
      description: "[Filter Group by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_name_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][match]
      description: "[Filter Group by name using match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_name_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][not_match]
      description: "[Filter Group by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_short_name_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[short_name][eq]
      description: "[Filter Group by short_name using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_short_name_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[short_name][not_eq]
      description: "[Filter Group by short_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_short_name_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[short_name][eql]
      description: "[Filter Group by short_name using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_short_name_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[short_name][not_eql]
      description: "[Filter Group by short_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_short_name_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[short_name][prefix]
      description: "[Filter Group by short_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_short_name_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[short_name][not_prefix]
      description: "[Filter Group by short_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_short_name_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[short_name][suffix]
      description: "[Filter Group by short_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_short_name_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[short_name][not_suffix]
      description: "[Filter Group by short_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_short_name_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[short_name][match]
      description: "[Filter Group by short_name using match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_short_name_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[short_name][not_match]
      description: "[Filter Group by short_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_display_name_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[display_name][eq]
      description: "[Filter Group by display_name using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_display_name_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[display_name][not_eq]
      description: "[Filter Group by display_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_display_name_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[display_name][eql]
      description: "[Filter Group by display_name using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_display_name_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[display_name][not_eql]
      description: "[Filter Group by display_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_display_name_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[display_name][prefix]
      description: "[Filter Group by display_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_display_name_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[display_name][not_prefix]
      description: "[Filter Group by display_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_display_name_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[display_name][suffix]
      description: "[Filter Group by display_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_display_name_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[display_name][not_suffix]
      description: "[Filter Group by display_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_display_name_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[display_name][match]
      description: "[Filter Group by display_name using match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_display_name_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[display_name][not_match]
      description: "[Filter Group by display_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_description_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[description][eq]
      description: "[Filter Group by description using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_description_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[description][not_eq]
      description: "[Filter Group by description using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_description_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[description][eql]
      description: "[Filter Group by description using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_description_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[description][not_eql]
      description: "[Filter Group by description using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_description_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[description][prefix]
      description: "[Filter Group by description using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_description_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[description][not_prefix]
      description: "[Filter Group by description using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_description_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[description][suffix]
      description: "[Filter Group by description using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_description_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[description][not_suffix]
      description: "[Filter Group by description using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_description_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[description][match]
      description: "[Filter Group by description using match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_description_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[description][not_match]
      description: "[Filter Group by description using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_layer_eq:
      in: query
      schema:
        type: boolean
      explode: false
      name: filter[layer][eq]
      description: "[Filter Group by layer using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_parent_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[parent_id][eq]
      description: "[Filter Group by parent_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_parent_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[parent_id][not_eq]
      description: "[Filter Group by parent_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_parent_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[parent_id][gt]
      description: "[Filter Group by parent_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_parent_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[parent_id][gte]
      description: "[Filter Group by parent_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_parent_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[parent_id][lt]
      description: "[Filter Group by parent_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_parent_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[parent_id][lte]
      description: "[Filter Group by parent_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_layer_group_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[layer_group_id][eq]
      description: "[Filter Group by layer_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_layer_group_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[layer_group_id][not_eq]
      description: "[Filter Group by layer_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_layer_group_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[layer_group_id][gt]
      description: "[Filter Group by layer_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_layer_group_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[layer_group_id][gte]
      description: "[Filter Group by layer_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_layer_group_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[layer_group_id][lt]
      description: "[Filter Group by layer_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_layer_group_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[layer_group_id][lte]
      description: "[Filter Group by layer_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_type_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][eq]
      description: "[Filter Group by type using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_type_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][not_eq]
      description: "[Filter Group by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_type_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][eql]
      description: "[Filter Group by type using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_type_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][not_eql]
      description: "[Filter Group by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_type_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][prefix]
      description: "[Filter Group by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_type_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][not_prefix]
      description: "[Filter Group by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_type_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][suffix]
      description: "[Filter Group by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_type_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][not_suffix]
      description: "[Filter Group by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_type_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][match]
      description: "[Filter Group by type using match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_type_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][not_match]
      description: "[Filter Group by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_email_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][eq]
      description: "[Filter Group by email using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_email_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_eq]
      description: "[Filter Group by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_email_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][eql]
      description: "[Filter Group by email using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_email_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_eql]
      description: "[Filter Group by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_email_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][prefix]
      description: "[Filter Group by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_email_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_prefix]
      description: "[Filter Group by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_email_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][suffix]
      description: "[Filter Group by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_email_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_suffix]
      description: "[Filter Group by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_email_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][match]
      description: "[Filter Group by email using match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_email_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_match]
      description: "[Filter Group by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_address_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][eq]
      description: "[Filter Group by address using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_address_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][not_eq]
      description: "[Filter Group by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_address_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][eql]
      description: "[Filter Group by address using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_address_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][not_eql]
      description: "[Filter Group by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_address_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][prefix]
      description: "[Filter Group by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_address_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][not_prefix]
      description: "[Filter Group by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_address_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][suffix]
      description: "[Filter Group by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_address_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][not_suffix]
      description: "[Filter Group by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_address_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][match]
      description: "[Filter Group by address using match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_address_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][not_match]
      description: "[Filter Group by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_zip_code_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[zip_code][eq]
      description: "[Filter Group by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_zip_code_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[zip_code][not_eq]
      description: "[Filter Group by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_zip_code_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[zip_code][gt]
      description: "[Filter Group by zip_code using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_zip_code_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[zip_code][gte]
      description: "[Filter Group by zip_code using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_zip_code_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[zip_code][lt]
      description: "[Filter Group by zip_code using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_zip_code_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[zip_code][lte]
      description: "[Filter Group by zip_code using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_town_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][eq]
      description: "[Filter Group by town using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_town_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][not_eq]
      description: "[Filter Group by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_town_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][eql]
      description: "[Filter Group by town using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_town_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][not_eql]
      description: "[Filter Group by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_town_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][prefix]
      description: "[Filter Group by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_town_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][not_prefix]
      description: "[Filter Group by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_town_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][suffix]
      description: "[Filter Group by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_town_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][not_suffix]
      description: "[Filter Group by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_town_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][match]
      description: "[Filter Group by town using match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_town_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][not_match]
      description: "[Filter Group by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_country_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][eq]
      description: "[Filter Group by country using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_country_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][not_eq]
      description: "[Filter Group by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_country_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][eql]
      description: "[Filter Group by country using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_country_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][not_eql]
      description: "[Filter Group by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_country_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][prefix]
      description: "[Filter Group by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_country_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][not_prefix]
      description: "[Filter Group by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_country_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][suffix]
      description: "[Filter Group by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_country_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][not_suffix]
      description: "[Filter Group by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_country_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][match]
      description: "[Filter Group by country using match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_country_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][not_match]
      description: "[Filter Group by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_require_person_add_requests_eq:
      in: query
      schema:
        type: boolean
      explode: false
      name: filter[require_person_add_requests][eq]
      description: "[Filter Group by require_person_add_requests using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_self_registration_url_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[self_registration_url][eq]
      description: "[Filter Group by self_registration_url using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_self_registration_url_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[self_registration_url][not_eq]
      description: "[Filter Group by self_registration_url using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_self_registration_url_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[self_registration_url][eql]
      description: "[Filter Group by self_registration_url using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_self_registration_url_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[self_registration_url][not_eql]
      description: "[Filter Group by self_registration_url using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_self_registration_url_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[self_registration_url][prefix]
      description: "[Filter Group by self_registration_url using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_self_registration_url_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[self_registration_url][not_prefix]
      description: "[Filter Group by self_registration_url using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_self_registration_url_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[self_registration_url][suffix]
      description: "[Filter Group by self_registration_url using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_self_registration_url_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[self_registration_url][not_suffix]
      description: "[Filter Group by self_registration_url using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_self_registration_url_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[self_registration_url][match]
      description: "[Filter Group by self_registration_url using match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_self_registration_url_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[self_registration_url][not_match]
      description: "[Filter Group by self_registration_url using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_archived_at_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[archived_at][eq]
      description: "[Filter Group by archived_at using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_archived_at_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[archived_at][not_eq]
      description: "[Filter Group by archived_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_archived_at_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[archived_at][gt]
      description: "[Filter Group by archived_at using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_archived_at_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[archived_at][gte]
      description: "[Filter Group by archived_at using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_archived_at_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[archived_at][lt]
      description: "[Filter Group by archived_at using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_archived_at_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[archived_at][lte]
      description: "[Filter Group by archived_at using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_created_at_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][eq]
      description: "[Filter Group by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_created_at_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][not_eq]
      description: "[Filter Group by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_created_at_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][gt]
      description: "[Filter Group by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_created_at_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][gte]
      description: "[Filter Group by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_created_at_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][lt]
      description: "[Filter Group by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_created_at_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][lte]
      description: "[Filter Group by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_updated_at_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][eq]
      description: "[Filter Group by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_updated_at_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][not_eq]
      description: "[Filter Group by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_updated_at_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][gt]
      description: "[Filter Group by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_updated_at_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][gte]
      description: "[Filter Group by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_updated_at_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][lt]
      description: "[Filter Group by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_updated_at_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][lte]
      description: "[Filter Group by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_deleted_at_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[deleted_at][eq]
      description: "[Filter Group by deleted_at using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_deleted_at_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[deleted_at][not_eq]
      description: "[Filter Group by deleted_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_deleted_at_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[deleted_at][gt]
      description: "[Filter Group by deleted_at using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_deleted_at_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[deleted_at][gte]
      description: "[Filter Group by deleted_at using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_deleted_at_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[deleted_at][lt]
      description: "[Filter Group by deleted_at using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_deleted_at_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[deleted_at][lte]
      description: "[Filter Group by deleted_at using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_with_deleted_eq:
      in: query
      schema:
        type: boolean
      explode: false
      name: filter[with_deleted][eq]
      description: "[Filter Group by with_deleted using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    groups_filter_with_archived_eq:
      in: query
      schema:
        type: boolean
      explode: false
      name: filter[with_archived][eq]
      description: "[Filter Group by with_archived using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    invoice_items_include:
      in: query
      schema:
        "$ref": "#/components/schemas/invoice_items_related"
      explode: false
      name: include
      description: "[Include related resources](https://jsonapi.org/format/#fetching-includes)"
    invoice_items_fields:
      in: query
      schema:
        description: Invoice item readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/invoice_items_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[invoice_items]
      description: "[Include only specified fields of Invoice item in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    invoice_items_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/invoice_items_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort invoice_items according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    invoice_items_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Invoice item by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Invoice item by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Invoice item by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Invoice item by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Invoice item by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Invoice item by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_invoice_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[invoice_id][eq]
      description: "[Filter Invoice item by invoice_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_invoice_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[invoice_id][not_eq]
      description: "[Filter Invoice item by invoice_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_invoice_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[invoice_id][gt]
      description: "[Filter Invoice item by invoice_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_invoice_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[invoice_id][gte]
      description: "[Filter Invoice item by invoice_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_invoice_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[invoice_id][lt]
      description: "[Filter Invoice item by invoice_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    invoice_items_filter_invoice_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[invoice_id][lte]
      description: "[Filter Invoice item by invoice_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    invoices_include:
      in: query
      schema:
        "$ref": "#/components/schemas/invoices_related"
      explode: false
      name: include
      description: "[Include related resources](https://jsonapi.org/format/#fetching-includes)"
    invoices_fields:
      in: query
      schema:
        description: Invoice readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/invoices_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[invoices]
      description: "[Include only specified fields of Invoice in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    invoices_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/invoices_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort invoices according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    invoices_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Invoice by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Invoice by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Invoice by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Invoice by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Invoice by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Invoice by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_group_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][eq]
      description: "[Filter Invoice by group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_group_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][not_eq]
      description: "[Filter Invoice by group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_group_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][gt]
      description: "[Filter Invoice by group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_group_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][gte]
      description: "[Filter Invoice by group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_group_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][lt]
      description: "[Filter Invoice by group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_group_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][lte]
      description: "[Filter Invoice by group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_recipient_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[recipient_id][eq]
      description: "[Filter Invoice by recipient_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_recipient_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[recipient_id][not_eq]
      description: "[Filter Invoice by recipient_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_recipient_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[recipient_id][gt]
      description: "[Filter Invoice by recipient_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_recipient_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[recipient_id][gte]
      description: "[Filter Invoice by recipient_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_recipient_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[recipient_id][lt]
      description: "[Filter Invoice by recipient_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    invoices_filter_recipient_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[recipient_id][lte]
      description: "[Filter Invoice by recipient_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    person-name_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    person-name_fields:
      in: query
      schema:
        description: Name readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/person-name_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[person-name]
      description: "[Include only specified fields of Name in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    person-name_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/person-name_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort person_names according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    person-name_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Name by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    person-name_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Name by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    person-name_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Name by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    person-name_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Name by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    person-name_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Name by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    person-name_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Name by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    person-name_filter_leads_course_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[leads_course_id][eq]
      description: "[Filter Name by leads_course_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    people_include:
      in: query
      schema:
        "$ref": "#/components/schemas/people_related"
      explode: false
      name: include
      description: "[Include related resources](https://jsonapi.org/format/#fetching-includes)"
    people_fields:
      in: query
      schema:
        description: Person readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/people_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[people]
      description: "[Include only specified fields of Person in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    people_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/people_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort people according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    people_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Person by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Person by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Person by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Person by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Person by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Person by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_first_name_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[first_name][eq]
      description: "[Filter Person by first_name using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_first_name_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[first_name][not_eq]
      description: "[Filter Person by first_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_first_name_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[first_name][eql]
      description: "[Filter Person by first_name using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_first_name_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[first_name][not_eql]
      description: "[Filter Person by first_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_first_name_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[first_name][prefix]
      description: "[Filter Person by first_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_first_name_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[first_name][not_prefix]
      description: "[Filter Person by first_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_first_name_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[first_name][suffix]
      description: "[Filter Person by first_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_first_name_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[first_name][not_suffix]
      description: "[Filter Person by first_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_first_name_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[first_name][match]
      description: "[Filter Person by first_name using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_first_name_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[first_name][not_match]
      description: "[Filter Person by first_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_last_name_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[last_name][eq]
      description: "[Filter Person by last_name using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_last_name_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[last_name][not_eq]
      description: "[Filter Person by last_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_last_name_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[last_name][eql]
      description: "[Filter Person by last_name using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_last_name_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[last_name][not_eql]
      description: "[Filter Person by last_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_last_name_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[last_name][prefix]
      description: "[Filter Person by last_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_last_name_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[last_name][not_prefix]
      description: "[Filter Person by last_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_last_name_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[last_name][suffix]
      description: "[Filter Person by last_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_last_name_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[last_name][not_suffix]
      description: "[Filter Person by last_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_last_name_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[last_name][match]
      description: "[Filter Person by last_name using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_last_name_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[last_name][not_match]
      description: "[Filter Person by last_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_nickname_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[nickname][eq]
      description: "[Filter Person by nickname using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_nickname_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[nickname][not_eq]
      description: "[Filter Person by nickname using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_nickname_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[nickname][eql]
      description: "[Filter Person by nickname using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_nickname_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[nickname][not_eql]
      description: "[Filter Person by nickname using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_nickname_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[nickname][prefix]
      description: "[Filter Person by nickname using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_nickname_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[nickname][not_prefix]
      description: "[Filter Person by nickname using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_nickname_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[nickname][suffix]
      description: "[Filter Person by nickname using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_nickname_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[nickname][not_suffix]
      description: "[Filter Person by nickname using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_nickname_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[nickname][match]
      description: "[Filter Person by nickname using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_nickname_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[nickname][not_match]
      description: "[Filter Person by nickname using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_name_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[company_name][eq]
      description: "[Filter Person by company_name using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_name_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[company_name][not_eq]
      description: "[Filter Person by company_name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_name_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[company_name][eql]
      description: "[Filter Person by company_name using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_name_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[company_name][not_eql]
      description: "[Filter Person by company_name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_name_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[company_name][prefix]
      description: "[Filter Person by company_name using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_name_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[company_name][not_prefix]
      description: "[Filter Person by company_name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_name_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[company_name][suffix]
      description: "[Filter Person by company_name using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_name_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[company_name][not_suffix]
      description: "[Filter Person by company_name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_name_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[company_name][match]
      description: "[Filter Person by company_name using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_name_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[company_name][not_match]
      description: "[Filter Person by company_name using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_company_eq:
      in: query
      schema:
        type: boolean
      explode: false
      name: filter[company][eq]
      description: "[Filter Person by company using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_email_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][eq]
      description: "[Filter Person by email using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_email_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_eq]
      description: "[Filter Person by email using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_email_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][eql]
      description: "[Filter Person by email using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_email_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_eql]
      description: "[Filter Person by email using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_email_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][prefix]
      description: "[Filter Person by email using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_email_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_prefix]
      description: "[Filter Person by email using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_email_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][suffix]
      description: "[Filter Person by email using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_email_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_suffix]
      description: "[Filter Person by email using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_email_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][match]
      description: "[Filter Person by email using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_email_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[email][not_match]
      description: "[Filter Person by email using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_address_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][eq]
      description: "[Filter Person by address using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_address_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][not_eq]
      description: "[Filter Person by address using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_address_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][eql]
      description: "[Filter Person by address using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_address_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][not_eql]
      description: "[Filter Person by address using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_address_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][prefix]
      description: "[Filter Person by address using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_address_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][not_prefix]
      description: "[Filter Person by address using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_address_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][suffix]
      description: "[Filter Person by address using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_address_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][not_suffix]
      description: "[Filter Person by address using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_address_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][match]
      description: "[Filter Person by address using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_address_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[address][not_match]
      description: "[Filter Person by address using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_zip_code_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[zip_code][eq]
      description: "[Filter Person by zip_code using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_zip_code_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[zip_code][not_eq]
      description: "[Filter Person by zip_code using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_zip_code_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[zip_code][eql]
      description: "[Filter Person by zip_code using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_zip_code_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[zip_code][not_eql]
      description: "[Filter Person by zip_code using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_zip_code_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[zip_code][prefix]
      description: "[Filter Person by zip_code using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_zip_code_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[zip_code][not_prefix]
      description: "[Filter Person by zip_code using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_zip_code_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[zip_code][suffix]
      description: "[Filter Person by zip_code using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_zip_code_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[zip_code][not_suffix]
      description: "[Filter Person by zip_code using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_zip_code_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[zip_code][match]
      description: "[Filter Person by zip_code using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_zip_code_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[zip_code][not_match]
      description: "[Filter Person by zip_code using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_town_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][eq]
      description: "[Filter Person by town using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_town_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][not_eq]
      description: "[Filter Person by town using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_town_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][eql]
      description: "[Filter Person by town using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_town_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][not_eql]
      description: "[Filter Person by town using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_town_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][prefix]
      description: "[Filter Person by town using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_town_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][not_prefix]
      description: "[Filter Person by town using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_town_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][suffix]
      description: "[Filter Person by town using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_town_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][not_suffix]
      description: "[Filter Person by town using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_town_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][match]
      description: "[Filter Person by town using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_town_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[town][not_match]
      description: "[Filter Person by town using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_country_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][eq]
      description: "[Filter Person by country using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_country_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][not_eq]
      description: "[Filter Person by country using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_country_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][eql]
      description: "[Filter Person by country using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_country_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][not_eql]
      description: "[Filter Person by country using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_country_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][prefix]
      description: "[Filter Person by country using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_country_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][not_prefix]
      description: "[Filter Person by country using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_country_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][suffix]
      description: "[Filter Person by country using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_country_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][not_suffix]
      description: "[Filter Person by country using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_country_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][match]
      description: "[Filter Person by country using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_country_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[country][not_match]
      description: "[Filter Person by country using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_primary_group_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[primary_group_id][eq]
      description: "[Filter Person by primary_group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_primary_group_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[primary_group_id][not_eq]
      description: "[Filter Person by primary_group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_primary_group_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[primary_group_id][gt]
      description: "[Filter Person by primary_group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_primary_group_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[primary_group_id][gte]
      description: "[Filter Person by primary_group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_primary_group_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[primary_group_id][lt]
      description: "[Filter Person by primary_group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_primary_group_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[primary_group_id][lte]
      description: "[Filter Person by primary_group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_gender_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[gender][eq]
      description: "[Filter Person by gender using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_gender_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[gender][not_eq]
      description: "[Filter Person by gender using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_gender_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[gender][eql]
      description: "[Filter Person by gender using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_gender_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[gender][not_eql]
      description: "[Filter Person by gender using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_gender_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[gender][prefix]
      description: "[Filter Person by gender using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_gender_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[gender][not_prefix]
      description: "[Filter Person by gender using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_gender_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[gender][suffix]
      description: "[Filter Person by gender using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_gender_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[gender][not_suffix]
      description: "[Filter Person by gender using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_gender_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[gender][match]
      description: "[Filter Person by gender using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_gender_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[gender][not_match]
      description: "[Filter Person by gender using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_birthday_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[birthday][eq]
      description: "[Filter Person by birthday using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_birthday_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[birthday][not_eq]
      description: "[Filter Person by birthday using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_birthday_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[birthday][gt]
      description: "[Filter Person by birthday using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_birthday_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[birthday][gte]
      description: "[Filter Person by birthday using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_birthday_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[birthday][lt]
      description: "[Filter Person by birthday using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_birthday_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[birthday][lte]
      description: "[Filter Person by birthday using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_language_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[language][eq]
      description: "[Filter Person by language using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_language_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[language][not_eq]
      description: "[Filter Person by language using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_language_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[language][eql]
      description: "[Filter Person by language using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_language_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[language][not_eql]
      description: "[Filter Person by language using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_language_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[language][prefix]
      description: "[Filter Person by language using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_language_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[language][not_prefix]
      description: "[Filter Person by language using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_language_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[language][suffix]
      description: "[Filter Person by language using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_language_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[language][not_suffix]
      description: "[Filter Person by language using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_language_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[language][match]
      description: "[Filter Person by language using match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_language_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[language][not_match]
      description: "[Filter Person by language using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_updated_at_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][eq]
      description: "[Filter Person by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_updated_at_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][not_eq]
      description: "[Filter Person by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_updated_at_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][gt]
      description: "[Filter Person by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_updated_at_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][gte]
      description: "[Filter Person by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_updated_at_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][lt]
      description: "[Filter Person by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    people_filter_updated_at_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][lte]
      description: "[Filter Person by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    phone_numbers_fields:
      in: query
      schema:
        description: Phone number readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/phone_numbers_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[phone_numbers]
      description: "[Include only specified fields of Phone number in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    phone_numbers_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/phone_numbers_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort phone_numbers according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    phone_numbers_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Phone number by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Phone number by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Phone number by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Phone number by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Phone number by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Phone number by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_label_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][eq]
      description: "[Filter Phone number by label using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_label_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_eq]
      description: "[Filter Phone number by label using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_label_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][eql]
      description: "[Filter Phone number by label using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_label_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_eql]
      description: "[Filter Phone number by label using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_label_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][prefix]
      description: "[Filter Phone number by label using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_label_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_prefix]
      description: "[Filter Phone number by label using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_label_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][suffix]
      description: "[Filter Phone number by label using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_label_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_suffix]
      description: "[Filter Phone number by label using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_label_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][match]
      description: "[Filter Phone number by label using match operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_label_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_match]
      description: "[Filter Phone number by label using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_public_eq:
      in: query
      schema:
        type: boolean
      explode: false
      name: filter[public][eq]
      description: "[Filter Phone number by public using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][eq]
      description: "[Filter Phone number by contactable_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][not_eq]
      description: "[Filter Phone number by contactable_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][gt]
      description: "[Filter Phone number by contactable_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][gte]
      description: "[Filter Phone number by contactable_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][lt]
      description: "[Filter Phone number by contactable_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][lte]
      description: "[Filter Phone number by contactable_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_type_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][eq]
      description: "[Filter Phone number by contactable_type using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_type_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_eq]
      description: "[Filter Phone number by contactable_type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_type_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][eql]
      description: "[Filter Phone number by contactable_type using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_type_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_eql]
      description: "[Filter Phone number by contactable_type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_type_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][prefix]
      description: "[Filter Phone number by contactable_type using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_type_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_prefix]
      description: "[Filter Phone number by contactable_type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_type_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][suffix]
      description: "[Filter Phone number by contactable_type using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_type_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_suffix]
      description: "[Filter Phone number by contactable_type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_type_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][match]
      description: "[Filter Phone number by contactable_type using match operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_contactable_type_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_match]
      description: "[Filter Phone number by contactable_type using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_number_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][eq]
      description: "[Filter Phone number by number using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_number_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][not_eq]
      description: "[Filter Phone number by number using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_number_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][eql]
      description: "[Filter Phone number by number using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_number_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][not_eql]
      description: "[Filter Phone number by number using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_number_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][prefix]
      description: "[Filter Phone number by number using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_number_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][not_prefix]
      description: "[Filter Phone number by number using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_number_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][suffix]
      description: "[Filter Phone number by number using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_number_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][not_suffix]
      description: "[Filter Phone number by number using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_number_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][match]
      description: "[Filter Phone number by number using match operator](https://jsonapi.org/format/#fetching-filtering)"
    phone_numbers_filter_number_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[number][not_match]
      description: "[Filter Phone number by number using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    roles_include:
      in: query
      schema:
        "$ref": "#/components/schemas/roles_related"
      explode: false
      name: include
      description: "[Include related resources](https://jsonapi.org/format/#fetching-includes)"
    roles_fields:
      in: query
      schema:
        description: Role readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/roles_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[roles]
      description: "[Include only specified fields of Role in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    roles_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/roles_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort roles according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    roles_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Role by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Role by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Role by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Role by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Role by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Role by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_created_at_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][eq]
      description: "[Filter Role by created_at using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_created_at_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][not_eq]
      description: "[Filter Role by created_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_created_at_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][gt]
      description: "[Filter Role by created_at using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_created_at_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][gte]
      description: "[Filter Role by created_at using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_created_at_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][lt]
      description: "[Filter Role by created_at using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_created_at_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[created_at][lte]
      description: "[Filter Role by created_at using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_updated_at_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][eq]
      description: "[Filter Role by updated_at using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_updated_at_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][not_eq]
      description: "[Filter Role by updated_at using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_updated_at_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][gt]
      description: "[Filter Role by updated_at using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_updated_at_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][gte]
      description: "[Filter Role by updated_at using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_updated_at_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][lt]
      description: "[Filter Role by updated_at using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_updated_at_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date-time
      explode: false
      name: filter[updated_at][lte]
      description: "[Filter Role by updated_at using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_start_on_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[start_on][eq]
      description: "[Filter Role by start_on using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_start_on_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[start_on][not_eq]
      description: "[Filter Role by start_on using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_start_on_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[start_on][gt]
      description: "[Filter Role by start_on using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_start_on_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[start_on][gte]
      description: "[Filter Role by start_on using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_start_on_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[start_on][lt]
      description: "[Filter Role by start_on using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_start_on_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[start_on][lte]
      description: "[Filter Role by start_on using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_end_on_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[end_on][eq]
      description: "[Filter Role by end_on using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_end_on_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[end_on][not_eq]
      description: "[Filter Role by end_on using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_end_on_gt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[end_on][gt]
      description: "[Filter Role by end_on using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_end_on_gte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[end_on][gte]
      description: "[Filter Role by end_on using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_end_on_lt:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[end_on][lt]
      description: "[Filter Role by end_on using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_end_on_lte:
      in: query
      schema:
        type: array
        items:
          type: string
          format: date
      explode: false
      name: filter[end_on][lte]
      description: "[Filter Role by end_on using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_person_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[person_id][eq]
      description: "[Filter Role by person_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_person_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[person_id][not_eq]
      description: "[Filter Role by person_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_person_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[person_id][gt]
      description: "[Filter Role by person_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_person_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[person_id][gte]
      description: "[Filter Role by person_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_person_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[person_id][lt]
      description: "[Filter Role by person_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_person_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[person_id][lte]
      description: "[Filter Role by person_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_group_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][eq]
      description: "[Filter Role by group_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_group_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][not_eq]
      description: "[Filter Role by group_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_group_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][gt]
      description: "[Filter Role by group_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_group_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][gte]
      description: "[Filter Role by group_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_group_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][lt]
      description: "[Filter Role by group_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_group_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[group_id][lte]
      description: "[Filter Role by group_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_type_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][eq]
      description: "[Filter Role by type using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_type_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][not_eq]
      description: "[Filter Role by type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_type_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][eql]
      description: "[Filter Role by type using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_type_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][not_eql]
      description: "[Filter Role by type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_type_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][prefix]
      description: "[Filter Role by type using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_type_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][not_prefix]
      description: "[Filter Role by type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_type_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][suffix]
      description: "[Filter Role by type using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_type_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][not_suffix]
      description: "[Filter Role by type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_type_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][match]
      description: "[Filter Role by type using match operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_type_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[type][not_match]
      description: "[Filter Role by type using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_label_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][eq]
      description: "[Filter Role by label using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_label_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_eq]
      description: "[Filter Role by label using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_label_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][eql]
      description: "[Filter Role by label using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_label_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_eql]
      description: "[Filter Role by label using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_label_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][prefix]
      description: "[Filter Role by label using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_label_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_prefix]
      description: "[Filter Role by label using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_label_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][suffix]
      description: "[Filter Role by label using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_label_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_suffix]
      description: "[Filter Role by label using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_label_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][match]
      description: "[Filter Role by label using match operator](https://jsonapi.org/format/#fetching-filtering)"
    roles_filter_label_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_match]
      description: "[Filter Role by label using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_id:
      in: path
      required: true
      schema:
        type: string
      name: id
      description: ID of the resource
    social_accounts_fields:
      in: query
      schema:
        description: Social account readable attributes list
        type: array
        items:
          "$ref": "#/components/schemas/social_accounts_readable_attribute"
        uniqueItems: true
      explode: false
      name: fields[social_accounts]
      description: "[Include only specified fields of Social account in response](https://jsonapi.org/format/#fetching-sparse-fieldsets)"
    social_accounts_sort:
      in: query
      schema:
        "$ref": "#/components/schemas/social_accounts_sortable_attributes_list"
      explode: false
      name: sort
      description: |+
        [Sort social_accounts according to one or more criteria](https://jsonapi.org/format/#fetching-sorting)

        You should not include both ascending `id` and descending `-id` fields the same time

    social_accounts_filter_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][eq]
      description: "[Filter Social account by id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][not_eq]
      description: "[Filter Social account by id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gt]
      description: "[Filter Social account by id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][gte]
      description: "[Filter Social account by id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lt]
      description: "[Filter Social account by id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[id][lte]
      description: "[Filter Social account by id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_label_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][eq]
      description: "[Filter Social account by label using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_label_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_eq]
      description: "[Filter Social account by label using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_label_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][eql]
      description: "[Filter Social account by label using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_label_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_eql]
      description: "[Filter Social account by label using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_label_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][prefix]
      description: "[Filter Social account by label using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_label_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_prefix]
      description: "[Filter Social account by label using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_label_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][suffix]
      description: "[Filter Social account by label using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_label_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_suffix]
      description: "[Filter Social account by label using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_label_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][match]
      description: "[Filter Social account by label using match operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_label_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[label][not_match]
      description: "[Filter Social account by label using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_public_eq:
      in: query
      schema:
        type: boolean
      explode: false
      name: filter[public][eq]
      description: "[Filter Social account by public using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_id_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][eq]
      description: "[Filter Social account by contactable_id using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_id_not_eq:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][not_eq]
      description: "[Filter Social account by contactable_id using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_id_gt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][gt]
      description: "[Filter Social account by contactable_id using gt operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_id_gte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][gte]
      description: "[Filter Social account by contactable_id using gte operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_id_lt:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][lt]
      description: "[Filter Social account by contactable_id using lt operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_id_lte:
      in: query
      schema:
        type: array
        items:
          type: integer
      explode: false
      name: filter[contactable_id][lte]
      description: "[Filter Social account by contactable_id using lte operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_type_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][eq]
      description: "[Filter Social account by contactable_type using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_type_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_eq]
      description: "[Filter Social account by contactable_type using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_type_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][eql]
      description: "[Filter Social account by contactable_type using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_type_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_eql]
      description: "[Filter Social account by contactable_type using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_type_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][prefix]
      description: "[Filter Social account by contactable_type using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_type_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_prefix]
      description: "[Filter Social account by contactable_type using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_type_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][suffix]
      description: "[Filter Social account by contactable_type using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_type_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_suffix]
      description: "[Filter Social account by contactable_type using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_type_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][match]
      description: "[Filter Social account by contactable_type using match operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_contactable_type_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[contactable_type][not_match]
      description: "[Filter Social account by contactable_type using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_name_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][eq]
      description: "[Filter Social account by name using eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_name_not_eq:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][not_eq]
      description: "[Filter Social account by name using not_eq operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_name_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][eql]
      description: "[Filter Social account by name using eql operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_name_not_eql:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][not_eql]
      description: "[Filter Social account by name using not_eql operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_name_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][prefix]
      description: "[Filter Social account by name using prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_name_not_prefix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][not_prefix]
      description: "[Filter Social account by name using not_prefix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_name_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][suffix]
      description: "[Filter Social account by name using suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_name_not_suffix:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][not_suffix]
      description: "[Filter Social account by name using not_suffix operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_name_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][match]
      description: "[Filter Social account by name using match operator](https://jsonapi.org/format/#fetching-filtering)"
    social_accounts_filter_name_not_match:
      in: query
      schema:
        type: array
        items:
          type: string
      explode: false
      name: filter[name][not_match]
      description: "[Filter Social account by name using not_match operator](https://jsonapi.org/format/#fetching-filtering)"
  requestBodies:
    additional_emails:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/additional_emails_request"
    courses:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/courses_request"
    dates:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/dates_request"
    event_kind_categories:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/event_kind_categories_request"
    event_kinds:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/event_kinds_request"
    events:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/events_request"
    groups:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/groups_request"
    invoice_items:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/invoice_items_request"
    invoices:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/invoices_request"
    person-name:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/person-name_request"
    people:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/people_request"
    phone_numbers:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/phone_numbers_request"
    roles:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/roles_request"
    social_accounts:
      required: true
      content:
        application/vnd.api+json:
          schema:
            "$ref": "#/components/schemas/social_accounts_request"
  links:
    getAdditionalEmailId:
      operationId: getAdditionalEmail
      parameters:
        id: "$response.body#/data/id"
    updateAdditionalEmailId:
      operationId: updateAdditionalEmail
      parameters:
        id: "$response.body#/data/id"
    deleteAdditionalEmailId:
      operationId: deleteAdditionalEmail
      parameters:
        id: "$response.body#/data/id"
    getEventCourseId:
      operationId: getEventCourse
      parameters:
        id: "$response.body#/data/id"
    updateEventCourseId:
      operationId: updateEventCourse
      parameters:
        id: "$response.body#/data/id"
    deleteEventCourseId:
      operationId: deleteEventCourse
      parameters:
        id: "$response.body#/data/id"
    getEventDateId:
      operationId: getEventDate
      parameters:
        id: "$response.body#/data/id"
    updateEventDateId:
      operationId: updateEventDate
      parameters:
        id: "$response.body#/data/id"
    deleteEventDateId:
      operationId: deleteEventDate
      parameters:
        id: "$response.body#/data/id"
    getEventKindCategoryId:
      operationId: getEventKindCategory
      parameters:
        id: "$response.body#/data/id"
    updateEventKindCategoryId:
      operationId: updateEventKindCategory
      parameters:
        id: "$response.body#/data/id"
    deleteEventKindCategoryId:
      operationId: deleteEventKindCategory
      parameters:
        id: "$response.body#/data/id"
    getEventKindId:
      operationId: getEventKind
      parameters:
        id: "$response.body#/data/id"
    updateEventKindId:
      operationId: updateEventKind
      parameters:
        id: "$response.body#/data/id"
    deleteEventKindId:
      operationId: deleteEventKind
      parameters:
        id: "$response.body#/data/id"
    getEventId:
      operationId: getEvent
      parameters:
        id: "$response.body#/data/id"
    updateEventId:
      operationId: updateEvent
      parameters:
        id: "$response.body#/data/id"
    deleteEventId:
      operationId: deleteEvent
      parameters:
        id: "$response.body#/data/id"
    getGroupId:
      operationId: getGroup
      parameters:
        id: "$response.body#/data/id"
    updateGroupId:
      operationId: updateGroup
      parameters:
        id: "$response.body#/data/id"
    deleteGroupId:
      operationId: deleteGroup
      parameters:
        id: "$response.body#/data/id"
    getInvoiceItemId:
      operationId: getInvoiceItem
      parameters:
        id: "$response.body#/data/id"
    updateInvoiceItemId:
      operationId: updateInvoiceItem
      parameters:
        id: "$response.body#/data/id"
    deleteInvoiceItemId:
      operationId: deleteInvoiceItem
      parameters:
        id: "$response.body#/data/id"
    getInvoiceId:
      operationId: getInvoice
      parameters:
        id: "$response.body#/data/id"
    updateInvoiceId:
      operationId: updateInvoice
      parameters:
        id: "$response.body#/data/id"
    deleteInvoiceId:
      operationId: deleteInvoice
      parameters:
        id: "$response.body#/data/id"
    getPersonNameId:
      operationId: getPersonName
      parameters:
        id: "$response.body#/data/id"
    updatePersonNameId:
      operationId: updatePersonName
      parameters:
        id: "$response.body#/data/id"
    deletePersonNameId:
      operationId: deletePersonName
      parameters:
        id: "$response.body#/data/id"
    getPersonId:
      operationId: getPerson
      parameters:
        id: "$response.body#/data/id"
    updatePersonId:
      operationId: updatePerson
      parameters:
        id: "$response.body#/data/id"
    deletePersonId:
      operationId: deletePerson
      parameters:
        id: "$response.body#/data/id"
    getPhoneNumberId:
      operationId: getPhoneNumber
      parameters:
        id: "$response.body#/data/id"
    updatePhoneNumberId:
      operationId: updatePhoneNumber
      parameters:
        id: "$response.body#/data/id"
    deletePhoneNumberId:
      operationId: deletePhoneNumber
      parameters:
        id: "$response.body#/data/id"
    getRoleId:
      operationId: getRole
      parameters:
        id: "$response.body#/data/id"
    updateRoleId:
      operationId: updateRole
      parameters:
        id: "$response.body#/data/id"
    deleteRoleId:
      operationId: deleteRole
      parameters:
        id: "$response.body#/data/id"
    getSocialAccountId:
      operationId: getSocialAccount
      parameters:
        id: "$response.body#/data/id"
    updateSocialAccountId:
      operationId: updateSocialAccount
      parameters:
        id: "$response.body#/data/id"
    deleteSocialAccountId:
      operationId: deleteSocialAccount
      parameters:
        id: "$response.body#/data/id"
security:
- ServiceTokenAuthHeader: []
  ServiceTokenAuthParam: []
tags:
- name: additional_emails
  description: Additional email operations
- name: courses
  description: Course operations
- name: dates
  description: Date operations
- name: event_kind_categories
  description: Kind category operations
- name: event_kinds
  description: Kind operations
- name: events
  description: Event operations
- name: groups
  description: Group operations
- name: invoice_items
  description: Invoice item operations
- name: invoices
  description: Invoice operations
- name: person-name
  description: Name operations
- name: people
  description: Person operations
- name: phone_numbers
  description: Phone number operations
- name: roles
  description: Role operations
- name: social_accounts
  description: Social account operations
paths:
  "/api/event_kind_categories":
    parameters:
    - "$ref": "#/components/parameters/event_kind_categories_sort"
    - "$ref": "#/components/parameters/event_kind_categories_fields"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_eq"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_not_eq"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_gt"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_gte"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_lt"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_lte"
    get:
      operationId: listEventKindCategories
      summary: List Event kind categories
      tags:
      - event_kind_categories
      responses:
        '200':
          "$ref": "#/components/responses/event_kind_categories_200_collection"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/api/event_kind_categories/{id}":
    parameters:
    - "$ref": "#/components/parameters/event_kind_categories_id"
    - "$ref": "#/components/parameters/event_kind_categories_sort"
    - "$ref": "#/components/parameters/event_kind_categories_fields"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_eq"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_not_eq"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_gt"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_gte"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_lt"
    - "$ref": "#/components/parameters/event_kind_categories_filter_id_lte"
    get:
      operationId: getEventKindCategory
      summary: Fetch Event kind category
      tags:
      - event_kind_categories
      responses:
        '200':
          "$ref": "#/components/responses/event_kind_categories_200"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/api/event_kinds":
    parameters:
    - "$ref": "#/components/parameters/event_kinds_include"
    - "$ref": "#/components/parameters/event_kinds_sort"
    - "$ref": "#/components/parameters/event_kinds_fields"
    - "$ref": "#/components/parameters/event_kinds_filter_id_eq"
    - "$ref": "#/components/parameters/event_kinds_filter_id_not_eq"
    - "$ref": "#/components/parameters/event_kinds_filter_id_gt"
    - "$ref": "#/components/parameters/event_kinds_filter_id_gte"
    - "$ref": "#/components/parameters/event_kinds_filter_id_lt"
    - "$ref": "#/components/parameters/event_kinds_filter_id_lte"
    - "$ref": "#/components/parameters/event_kind_categories_fields"
    get:
      operationId: listEventKinds
      summary: List Event kinds
      tags:
      - event_kinds
      responses:
        '200':
          "$ref": "#/components/responses/event_kinds_200_collection"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/api/event_kinds/{id}":
    parameters:
    - "$ref": "#/components/parameters/event_kinds_id"
    - "$ref": "#/components/parameters/event_kinds_include"
    - "$ref": "#/components/parameters/event_kinds_sort"
    - "$ref": "#/components/parameters/event_kinds_fields"
    - "$ref": "#/components/parameters/event_kinds_filter_id_eq"
    - "$ref": "#/components/parameters/event_kinds_filter_id_not_eq"
    - "$ref": "#/components/parameters/event_kinds_filter_id_gt"
    - "$ref": "#/components/parameters/event_kinds_filter_id_gte"
    - "$ref": "#/components/parameters/event_kinds_filter_id_lt"
    - "$ref": "#/components/parameters/event_kinds_filter_id_lte"
    - "$ref": "#/components/parameters/event_kind_categories_fields"
    get:
      operationId: getEventKind
      summary: Fetch Event kind
      tags:
      - event_kinds
      responses:
        '200':
          "$ref": "#/components/responses/event_kinds_200"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/api/events":
    parameters:
    - "$ref": "#/components/parameters/events_include"
    - "$ref": "#/components/parameters/events_sort"
    - "$ref": "#/components/parameters/events_fields"
    - "$ref": "#/components/parameters/events_filter_id_eq"
    - "$ref": "#/components/parameters/events_filter_id_not_eq"
    - "$ref": "#/components/parameters/events_filter_id_gt"
    - "$ref": "#/components/parameters/events_filter_id_gte"
    - "$ref": "#/components/parameters/events_filter_id_lt"
    - "$ref": "#/components/parameters/events_filter_id_lte"
    - "$ref": "#/components/parameters/events_filter_kind_id_eq"
    - "$ref": "#/components/parameters/events_filter_kind_id_not_eq"
    - "$ref": "#/components/parameters/events_filter_kind_id_gt"
    - "$ref": "#/components/parameters/events_filter_kind_id_gte"
    - "$ref": "#/components/parameters/events_filter_kind_id_lt"
    - "$ref": "#/components/parameters/events_filter_kind_id_lte"
    - "$ref": "#/components/parameters/events_filter_updated_at_eq"
    - "$ref": "#/components/parameters/events_filter_updated_at_not_eq"
    - "$ref": "#/components/parameters/events_filter_updated_at_gt"
    - "$ref": "#/components/parameters/events_filter_updated_at_gte"
    - "$ref": "#/components/parameters/events_filter_updated_at_lt"
    - "$ref": "#/components/parameters/events_filter_updated_at_lte"
    - "$ref": "#/components/parameters/events_filter_type_eq"
    - "$ref": "#/components/parameters/events_filter_group_id_eq"
    - "$ref": "#/components/parameters/events_filter_group_id_not_eq"
    - "$ref": "#/components/parameters/events_filter_before_or_on_eq"
    - "$ref": "#/components/parameters/events_filter_after_or_on_eq"
    - "$ref": "#/components/parameters/events_filter_kind_category_id_eq"
    - "$ref": "#/components/parameters/people_fields"
    - "$ref": "#/components/parameters/event_kinds_fields"
    - "$ref": "#/components/parameters/dates_fields"
    get:
      operationId: listEvents
      summary: List Events
      tags:
      - events
      responses:
        '200':
          "$ref": "#/components/responses/events_200_collection"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/api/events/{id}":
    parameters:
    - "$ref": "#/components/parameters/events_id"
    - "$ref": "#/components/parameters/events_include"
    - "$ref": "#/components/parameters/events_sort"
    - "$ref": "#/components/parameters/events_fields"
    - "$ref": "#/components/parameters/events_filter_id_eq"
    - "$ref": "#/components/parameters/events_filter_id_not_eq"
    - "$ref": "#/components/parameters/events_filter_id_gt"
    - "$ref": "#/components/parameters/events_filter_id_gte"
    - "$ref": "#/components/parameters/events_filter_id_lt"
    - "$ref": "#/components/parameters/events_filter_id_lte"
    - "$ref": "#/components/parameters/events_filter_kind_id_eq"
    - "$ref": "#/components/parameters/events_filter_kind_id_not_eq"
    - "$ref": "#/components/parameters/events_filter_kind_id_gt"
    - "$ref": "#/components/parameters/events_filter_kind_id_gte"
    - "$ref": "#/components/parameters/events_filter_kind_id_lt"
    - "$ref": "#/components/parameters/events_filter_kind_id_lte"
    - "$ref": "#/components/parameters/events_filter_updated_at_eq"
    - "$ref": "#/components/parameters/events_filter_updated_at_not_eq"
    - "$ref": "#/components/parameters/events_filter_updated_at_gt"
    - "$ref": "#/components/parameters/events_filter_updated_at_gte"
    - "$ref": "#/components/parameters/events_filter_updated_at_lt"
    - "$ref": "#/components/parameters/events_filter_updated_at_lte"
    - "$ref": "#/components/parameters/events_filter_type_eq"
    - "$ref": "#/components/parameters/events_filter_group_id_eq"
    - "$ref": "#/components/parameters/events_filter_group_id_not_eq"
    - "$ref": "#/components/parameters/events_filter_before_or_on_eq"
    - "$ref": "#/components/parameters/events_filter_after_or_on_eq"
    - "$ref": "#/components/parameters/events_filter_kind_category_id_eq"
    - "$ref": "#/components/parameters/people_fields"
    - "$ref": "#/components/parameters/event_kinds_fields"
    - "$ref": "#/components/parameters/dates_fields"
    get:
      operationId: getEvent
      summary: Fetch Event
      tags:
      - events
      responses:
        '200':
          "$ref": "#/components/responses/events_200"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/api/groups":
    parameters:
    - "$ref": "#/components/parameters/groups_include"
    - "$ref": "#/components/parameters/groups_sort"
    - "$ref": "#/components/parameters/groups_fields"
    - "$ref": "#/components/parameters/groups_extra_fields"
    - "$ref": "#/components/parameters/groups_filter_id_eq"
    - "$ref": "#/components/parameters/groups_filter_id_not_eq"
    - "$ref": "#/components/parameters/groups_filter_id_gt"
    - "$ref": "#/components/parameters/groups_filter_id_gte"
    - "$ref": "#/components/parameters/groups_filter_id_lt"
    - "$ref": "#/components/parameters/groups_filter_id_lte"
    - "$ref": "#/components/parameters/groups_filter_name_eq"
    - "$ref": "#/components/parameters/groups_filter_name_not_eq"
    - "$ref": "#/components/parameters/groups_filter_name_eql"
    - "$ref": "#/components/parameters/groups_filter_name_not_eql"
    - "$ref": "#/components/parameters/groups_filter_name_prefix"
    - "$ref": "#/components/parameters/groups_filter_name_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_name_suffix"
    - "$ref": "#/components/parameters/groups_filter_name_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_name_match"
    - "$ref": "#/components/parameters/groups_filter_name_not_match"
    - "$ref": "#/components/parameters/groups_filter_short_name_eq"
    - "$ref": "#/components/parameters/groups_filter_short_name_not_eq"
    - "$ref": "#/components/parameters/groups_filter_short_name_eql"
    - "$ref": "#/components/parameters/groups_filter_short_name_not_eql"
    - "$ref": "#/components/parameters/groups_filter_short_name_prefix"
    - "$ref": "#/components/parameters/groups_filter_short_name_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_short_name_suffix"
    - "$ref": "#/components/parameters/groups_filter_short_name_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_short_name_match"
    - "$ref": "#/components/parameters/groups_filter_short_name_not_match"
    - "$ref": "#/components/parameters/groups_filter_display_name_eq"
    - "$ref": "#/components/parameters/groups_filter_display_name_not_eq"
    - "$ref": "#/components/parameters/groups_filter_display_name_eql"
    - "$ref": "#/components/parameters/groups_filter_display_name_not_eql"
    - "$ref": "#/components/parameters/groups_filter_display_name_prefix"
    - "$ref": "#/components/parameters/groups_filter_display_name_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_display_name_suffix"
    - "$ref": "#/components/parameters/groups_filter_display_name_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_display_name_match"
    - "$ref": "#/components/parameters/groups_filter_display_name_not_match"
    - "$ref": "#/components/parameters/groups_filter_description_eq"
    - "$ref": "#/components/parameters/groups_filter_description_not_eq"
    - "$ref": "#/components/parameters/groups_filter_description_eql"
    - "$ref": "#/components/parameters/groups_filter_description_not_eql"
    - "$ref": "#/components/parameters/groups_filter_description_prefix"
    - "$ref": "#/components/parameters/groups_filter_description_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_description_suffix"
    - "$ref": "#/components/parameters/groups_filter_description_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_description_match"
    - "$ref": "#/components/parameters/groups_filter_description_not_match"
    - "$ref": "#/components/parameters/groups_filter_layer_eq"
    - "$ref": "#/components/parameters/groups_filter_parent_id_eq"
    - "$ref": "#/components/parameters/groups_filter_parent_id_not_eq"
    - "$ref": "#/components/parameters/groups_filter_parent_id_gt"
    - "$ref": "#/components/parameters/groups_filter_parent_id_gte"
    - "$ref": "#/components/parameters/groups_filter_parent_id_lt"
    - "$ref": "#/components/parameters/groups_filter_parent_id_lte"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_eq"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_not_eq"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_gt"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_gte"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_lt"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_lte"
    - "$ref": "#/components/parameters/groups_filter_type_eq"
    - "$ref": "#/components/parameters/groups_filter_type_not_eq"
    - "$ref": "#/components/parameters/groups_filter_type_eql"
    - "$ref": "#/components/parameters/groups_filter_type_not_eql"
    - "$ref": "#/components/parameters/groups_filter_type_prefix"
    - "$ref": "#/components/parameters/groups_filter_type_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_type_suffix"
    - "$ref": "#/components/parameters/groups_filter_type_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_type_match"
    - "$ref": "#/components/parameters/groups_filter_type_not_match"
    - "$ref": "#/components/parameters/groups_filter_email_eq"
    - "$ref": "#/components/parameters/groups_filter_email_not_eq"
    - "$ref": "#/components/parameters/groups_filter_email_eql"
    - "$ref": "#/components/parameters/groups_filter_email_not_eql"
    - "$ref": "#/components/parameters/groups_filter_email_prefix"
    - "$ref": "#/components/parameters/groups_filter_email_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_email_suffix"
    - "$ref": "#/components/parameters/groups_filter_email_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_email_match"
    - "$ref": "#/components/parameters/groups_filter_email_not_match"
    - "$ref": "#/components/parameters/groups_filter_address_eq"
    - "$ref": "#/components/parameters/groups_filter_address_not_eq"
    - "$ref": "#/components/parameters/groups_filter_address_eql"
    - "$ref": "#/components/parameters/groups_filter_address_not_eql"
    - "$ref": "#/components/parameters/groups_filter_address_prefix"
    - "$ref": "#/components/parameters/groups_filter_address_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_address_suffix"
    - "$ref": "#/components/parameters/groups_filter_address_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_address_match"
    - "$ref": "#/components/parameters/groups_filter_address_not_match"
    - "$ref": "#/components/parameters/groups_filter_zip_code_eq"
    - "$ref": "#/components/parameters/groups_filter_zip_code_not_eq"
    - "$ref": "#/components/parameters/groups_filter_zip_code_gt"
    - "$ref": "#/components/parameters/groups_filter_zip_code_gte"
    - "$ref": "#/components/parameters/groups_filter_zip_code_lt"
    - "$ref": "#/components/parameters/groups_filter_zip_code_lte"
    - "$ref": "#/components/parameters/groups_filter_town_eq"
    - "$ref": "#/components/parameters/groups_filter_town_not_eq"
    - "$ref": "#/components/parameters/groups_filter_town_eql"
    - "$ref": "#/components/parameters/groups_filter_town_not_eql"
    - "$ref": "#/components/parameters/groups_filter_town_prefix"
    - "$ref": "#/components/parameters/groups_filter_town_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_town_suffix"
    - "$ref": "#/components/parameters/groups_filter_town_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_town_match"
    - "$ref": "#/components/parameters/groups_filter_town_not_match"
    - "$ref": "#/components/parameters/groups_filter_country_eq"
    - "$ref": "#/components/parameters/groups_filter_country_not_eq"
    - "$ref": "#/components/parameters/groups_filter_country_eql"
    - "$ref": "#/components/parameters/groups_filter_country_not_eql"
    - "$ref": "#/components/parameters/groups_filter_country_prefix"
    - "$ref": "#/components/parameters/groups_filter_country_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_country_suffix"
    - "$ref": "#/components/parameters/groups_filter_country_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_country_match"
    - "$ref": "#/components/parameters/groups_filter_country_not_match"
    - "$ref": "#/components/parameters/groups_filter_require_person_add_requests_eq"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_eq"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_not_eq"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_eql"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_not_eql"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_prefix"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_suffix"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_match"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_not_match"
    - "$ref": "#/components/parameters/groups_filter_archived_at_eq"
    - "$ref": "#/components/parameters/groups_filter_archived_at_not_eq"
    - "$ref": "#/components/parameters/groups_filter_archived_at_gt"
    - "$ref": "#/components/parameters/groups_filter_archived_at_gte"
    - "$ref": "#/components/parameters/groups_filter_archived_at_lt"
    - "$ref": "#/components/parameters/groups_filter_archived_at_lte"
    - "$ref": "#/components/parameters/groups_filter_created_at_eq"
    - "$ref": "#/components/parameters/groups_filter_created_at_not_eq"
    - "$ref": "#/components/parameters/groups_filter_created_at_gt"
    - "$ref": "#/components/parameters/groups_filter_created_at_gte"
    - "$ref": "#/components/parameters/groups_filter_created_at_lt"
    - "$ref": "#/components/parameters/groups_filter_created_at_lte"
    - "$ref": "#/components/parameters/groups_filter_updated_at_eq"
    - "$ref": "#/components/parameters/groups_filter_updated_at_not_eq"
    - "$ref": "#/components/parameters/groups_filter_updated_at_gt"
    - "$ref": "#/components/parameters/groups_filter_updated_at_gte"
    - "$ref": "#/components/parameters/groups_filter_updated_at_lt"
    - "$ref": "#/components/parameters/groups_filter_updated_at_lte"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_eq"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_not_eq"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_gt"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_gte"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_lt"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_lte"
    - "$ref": "#/components/parameters/groups_filter_with_deleted_eq"
    - "$ref": "#/components/parameters/groups_filter_with_archived_eq"
    - "$ref": "#/components/parameters/people_fields"
    - "$ref": "#/components/parameters/phone_numbers_fields"
    - "$ref": "#/components/parameters/social_accounts_fields"
    - "$ref": "#/components/parameters/additional_emails_fields"
    get:
      operationId: listGroups
      summary: List Groups
      tags:
      - groups
      responses:
        '200':
          "$ref": "#/components/responses/groups_200_collection"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/api/groups/{id}":
    parameters:
    - "$ref": "#/components/parameters/groups_id"
    - "$ref": "#/components/parameters/groups_include"
    - "$ref": "#/components/parameters/groups_sort"
    - "$ref": "#/components/parameters/groups_fields"
    - "$ref": "#/components/parameters/groups_extra_fields"
    - "$ref": "#/components/parameters/groups_filter_id_eq"
    - "$ref": "#/components/parameters/groups_filter_id_not_eq"
    - "$ref": "#/components/parameters/groups_filter_id_gt"
    - "$ref": "#/components/parameters/groups_filter_id_gte"
    - "$ref": "#/components/parameters/groups_filter_id_lt"
    - "$ref": "#/components/parameters/groups_filter_id_lte"
    - "$ref": "#/components/parameters/groups_filter_name_eq"
    - "$ref": "#/components/parameters/groups_filter_name_not_eq"
    - "$ref": "#/components/parameters/groups_filter_name_eql"
    - "$ref": "#/components/parameters/groups_filter_name_not_eql"
    - "$ref": "#/components/parameters/groups_filter_name_prefix"
    - "$ref": "#/components/parameters/groups_filter_name_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_name_suffix"
    - "$ref": "#/components/parameters/groups_filter_name_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_name_match"
    - "$ref": "#/components/parameters/groups_filter_name_not_match"
    - "$ref": "#/components/parameters/groups_filter_short_name_eq"
    - "$ref": "#/components/parameters/groups_filter_short_name_not_eq"
    - "$ref": "#/components/parameters/groups_filter_short_name_eql"
    - "$ref": "#/components/parameters/groups_filter_short_name_not_eql"
    - "$ref": "#/components/parameters/groups_filter_short_name_prefix"
    - "$ref": "#/components/parameters/groups_filter_short_name_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_short_name_suffix"
    - "$ref": "#/components/parameters/groups_filter_short_name_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_short_name_match"
    - "$ref": "#/components/parameters/groups_filter_short_name_not_match"
    - "$ref": "#/components/parameters/groups_filter_display_name_eq"
    - "$ref": "#/components/parameters/groups_filter_display_name_not_eq"
    - "$ref": "#/components/parameters/groups_filter_display_name_eql"
    - "$ref": "#/components/parameters/groups_filter_display_name_not_eql"
    - "$ref": "#/components/parameters/groups_filter_display_name_prefix"
    - "$ref": "#/components/parameters/groups_filter_display_name_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_display_name_suffix"
    - "$ref": "#/components/parameters/groups_filter_display_name_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_display_name_match"
    - "$ref": "#/components/parameters/groups_filter_display_name_not_match"
    - "$ref": "#/components/parameters/groups_filter_description_eq"
    - "$ref": "#/components/parameters/groups_filter_description_not_eq"
    - "$ref": "#/components/parameters/groups_filter_description_eql"
    - "$ref": "#/components/parameters/groups_filter_description_not_eql"
    - "$ref": "#/components/parameters/groups_filter_description_prefix"
    - "$ref": "#/components/parameters/groups_filter_description_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_description_suffix"
    - "$ref": "#/components/parameters/groups_filter_description_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_description_match"
    - "$ref": "#/components/parameters/groups_filter_description_not_match"
    - "$ref": "#/components/parameters/groups_filter_layer_eq"
    - "$ref": "#/components/parameters/groups_filter_parent_id_eq"
    - "$ref": "#/components/parameters/groups_filter_parent_id_not_eq"
    - "$ref": "#/components/parameters/groups_filter_parent_id_gt"
    - "$ref": "#/components/parameters/groups_filter_parent_id_gte"
    - "$ref": "#/components/parameters/groups_filter_parent_id_lt"
    - "$ref": "#/components/parameters/groups_filter_parent_id_lte"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_eq"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_not_eq"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_gt"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_gte"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_lt"
    - "$ref": "#/components/parameters/groups_filter_layer_group_id_lte"
    - "$ref": "#/components/parameters/groups_filter_type_eq"
    - "$ref": "#/components/parameters/groups_filter_type_not_eq"
    - "$ref": "#/components/parameters/groups_filter_type_eql"
    - "$ref": "#/components/parameters/groups_filter_type_not_eql"
    - "$ref": "#/components/parameters/groups_filter_type_prefix"
    - "$ref": "#/components/parameters/groups_filter_type_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_type_suffix"
    - "$ref": "#/components/parameters/groups_filter_type_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_type_match"
    - "$ref": "#/components/parameters/groups_filter_type_not_match"
    - "$ref": "#/components/parameters/groups_filter_email_eq"
    - "$ref": "#/components/parameters/groups_filter_email_not_eq"
    - "$ref": "#/components/parameters/groups_filter_email_eql"
    - "$ref": "#/components/parameters/groups_filter_email_not_eql"
    - "$ref": "#/components/parameters/groups_filter_email_prefix"
    - "$ref": "#/components/parameters/groups_filter_email_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_email_suffix"
    - "$ref": "#/components/parameters/groups_filter_email_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_email_match"
    - "$ref": "#/components/parameters/groups_filter_email_not_match"
    - "$ref": "#/components/parameters/groups_filter_address_eq"
    - "$ref": "#/components/parameters/groups_filter_address_not_eq"
    - "$ref": "#/components/parameters/groups_filter_address_eql"
    - "$ref": "#/components/parameters/groups_filter_address_not_eql"
    - "$ref": "#/components/parameters/groups_filter_address_prefix"
    - "$ref": "#/components/parameters/groups_filter_address_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_address_suffix"
    - "$ref": "#/components/parameters/groups_filter_address_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_address_match"
    - "$ref": "#/components/parameters/groups_filter_address_not_match"
    - "$ref": "#/components/parameters/groups_filter_zip_code_eq"
    - "$ref": "#/components/parameters/groups_filter_zip_code_not_eq"
    - "$ref": "#/components/parameters/groups_filter_zip_code_gt"
    - "$ref": "#/components/parameters/groups_filter_zip_code_gte"
    - "$ref": "#/components/parameters/groups_filter_zip_code_lt"
    - "$ref": "#/components/parameters/groups_filter_zip_code_lte"
    - "$ref": "#/components/parameters/groups_filter_town_eq"
    - "$ref": "#/components/parameters/groups_filter_town_not_eq"
    - "$ref": "#/components/parameters/groups_filter_town_eql"
    - "$ref": "#/components/parameters/groups_filter_town_not_eql"
    - "$ref": "#/components/parameters/groups_filter_town_prefix"
    - "$ref": "#/components/parameters/groups_filter_town_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_town_suffix"
    - "$ref": "#/components/parameters/groups_filter_town_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_town_match"
    - "$ref": "#/components/parameters/groups_filter_town_not_match"
    - "$ref": "#/components/parameters/groups_filter_country_eq"
    - "$ref": "#/components/parameters/groups_filter_country_not_eq"
    - "$ref": "#/components/parameters/groups_filter_country_eql"
    - "$ref": "#/components/parameters/groups_filter_country_not_eql"
    - "$ref": "#/components/parameters/groups_filter_country_prefix"
    - "$ref": "#/components/parameters/groups_filter_country_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_country_suffix"
    - "$ref": "#/components/parameters/groups_filter_country_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_country_match"
    - "$ref": "#/components/parameters/groups_filter_country_not_match"
    - "$ref": "#/components/parameters/groups_filter_require_person_add_requests_eq"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_eq"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_not_eq"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_eql"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_not_eql"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_prefix"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_not_prefix"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_suffix"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_not_suffix"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_match"
    - "$ref": "#/components/parameters/groups_filter_self_registration_url_not_match"
    - "$ref": "#/components/parameters/groups_filter_archived_at_eq"
    - "$ref": "#/components/parameters/groups_filter_archived_at_not_eq"
    - "$ref": "#/components/parameters/groups_filter_archived_at_gt"
    - "$ref": "#/components/parameters/groups_filter_archived_at_gte"
    - "$ref": "#/components/parameters/groups_filter_archived_at_lt"
    - "$ref": "#/components/parameters/groups_filter_archived_at_lte"
    - "$ref": "#/components/parameters/groups_filter_created_at_eq"
    - "$ref": "#/components/parameters/groups_filter_created_at_not_eq"
    - "$ref": "#/components/parameters/groups_filter_created_at_gt"
    - "$ref": "#/components/parameters/groups_filter_created_at_gte"
    - "$ref": "#/components/parameters/groups_filter_created_at_lt"
    - "$ref": "#/components/parameters/groups_filter_created_at_lte"
    - "$ref": "#/components/parameters/groups_filter_updated_at_eq"
    - "$ref": "#/components/parameters/groups_filter_updated_at_not_eq"
    - "$ref": "#/components/parameters/groups_filter_updated_at_gt"
    - "$ref": "#/components/parameters/groups_filter_updated_at_gte"
    - "$ref": "#/components/parameters/groups_filter_updated_at_lt"
    - "$ref": "#/components/parameters/groups_filter_updated_at_lte"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_eq"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_not_eq"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_gt"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_gte"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_lt"
    - "$ref": "#/components/parameters/groups_filter_deleted_at_lte"
    - "$ref": "#/components/parameters/groups_filter_with_deleted_eq"
    - "$ref": "#/components/parameters/groups_filter_with_archived_eq"
    - "$ref": "#/components/parameters/people_fields"
    - "$ref": "#/components/parameters/phone_numbers_fields"
    - "$ref": "#/components/parameters/social_accounts_fields"
    - "$ref": "#/components/parameters/additional_emails_fields"
    get:
      operationId: getGroup
      summary: Fetch Group
      tags:
      - groups
      responses:
        '200':
          "$ref": "#/components/responses/groups_200"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
  "/api/invoices":
    parameters:
    - "$ref": "#/components/parameters/invoices_include"
    - "$ref": "#/components/parameters/invoices_sort"
    - "$ref": "#/components/parameters/invoices_fields"
    - "$ref": "#/components/parameters/invoices_filter_id_eq"
    - "$ref": "#/components/parameters/invoices_filter_id_not_eq"
    - "$ref": "#/components/parameters/invoices_filter_id_gt"
    - "$ref": "#/components/parameters/invoices_filter_id_gte"
    - "$ref": "#/components/parameters/invoices_filter_id_lt"
    - "$ref": "#/components/parameters/invoices_filter_id_lte"
    - "$ref": "#/components/parameters/invoices_filter_group_id_eq"
    - "$ref": "#/components/parameters/invoices_filter_group_id_not_eq"
    - "$ref": "#/components/parameters/invoices_filter_group_id_gt"
    - "$ref": "#/components/parameters/invoices_filter_group_id_gte"
    - "$ref": "#/components/parameters/invoices_filter_group_id_lt"
    - "$ref": "#/components/parameters/invoices_filter_group_id_lte"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_eq"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_not_eq"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_gt"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_gte"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_lt"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_lte"
    - "$ref": "#/components/parameters/groups_fields"
    - "$ref": "#/components/parameters/people_fields"
    - "$ref": "#/components/parameters/invoice_items_fields"
    get:
      operationId: listInvoices
      summary: List Invoices
      tags:
      - invoices
      responses:
        '200':
          "$ref": "#/components/responses/invoices_200_collection"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/api/invoices/{id}":
    parameters:
    - "$ref": "#/components/parameters/invoices_id"
    - "$ref": "#/components/parameters/invoices_include"
    - "$ref": "#/components/parameters/invoices_sort"
    - "$ref": "#/components/parameters/invoices_fields"
    - "$ref": "#/components/parameters/invoices_filter_id_eq"
    - "$ref": "#/components/parameters/invoices_filter_id_not_eq"
    - "$ref": "#/components/parameters/invoices_filter_id_gt"
    - "$ref": "#/components/parameters/invoices_filter_id_gte"
    - "$ref": "#/components/parameters/invoices_filter_id_lt"
    - "$ref": "#/components/parameters/invoices_filter_id_lte"
    - "$ref": "#/components/parameters/invoices_filter_group_id_eq"
    - "$ref": "#/components/parameters/invoices_filter_group_id_not_eq"
    - "$ref": "#/components/parameters/invoices_filter_group_id_gt"
    - "$ref": "#/components/parameters/invoices_filter_group_id_gte"
    - "$ref": "#/components/parameters/invoices_filter_group_id_lt"
    - "$ref": "#/components/parameters/invoices_filter_group_id_lte"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_eq"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_not_eq"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_gt"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_gte"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_lt"
    - "$ref": "#/components/parameters/invoices_filter_recipient_id_lte"
    - "$ref": "#/components/parameters/groups_fields"
    - "$ref": "#/components/parameters/people_fields"
    - "$ref": "#/components/parameters/invoice_items_fields"
    get:
      operationId: getInvoice
      summary: Fetch Invoice
      tags:
      - invoices
      responses:
        '200':
          "$ref": "#/components/responses/invoices_200"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    put:
      operationId: updateInvoice
      summary: Update Invoice
      tags:
      - invoices
      responses:
        '200':
          "$ref": "#/components/responses/invoices_200"
        '202':
          "$ref": "#/components/responses/202"
        '204':
          "$ref": "#/components/responses/204"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/409"
        '404':
          "$ref": "#/components/responses/404"
        '422':
          "$ref": "#/components/responses/422"
      requestBody:
        "$ref": "#/components/requestBodies/invoices"
  "/api/people":
    parameters:
    - "$ref": "#/components/parameters/people_include"
    - "$ref": "#/components/parameters/people_sort"
    - "$ref": "#/components/parameters/people_fields"
    - "$ref": "#/components/parameters/people_filter_id_eq"
    - "$ref": "#/components/parameters/people_filter_id_not_eq"
    - "$ref": "#/components/parameters/people_filter_id_gt"
    - "$ref": "#/components/parameters/people_filter_id_gte"
    - "$ref": "#/components/parameters/people_filter_id_lt"
    - "$ref": "#/components/parameters/people_filter_id_lte"
    - "$ref": "#/components/parameters/people_filter_first_name_eq"
    - "$ref": "#/components/parameters/people_filter_first_name_not_eq"
    - "$ref": "#/components/parameters/people_filter_first_name_eql"
    - "$ref": "#/components/parameters/people_filter_first_name_not_eql"
    - "$ref": "#/components/parameters/people_filter_first_name_prefix"
    - "$ref": "#/components/parameters/people_filter_first_name_not_prefix"
    - "$ref": "#/components/parameters/people_filter_first_name_suffix"
    - "$ref": "#/components/parameters/people_filter_first_name_not_suffix"
    - "$ref": "#/components/parameters/people_filter_first_name_match"
    - "$ref": "#/components/parameters/people_filter_first_name_not_match"
    - "$ref": "#/components/parameters/people_filter_last_name_eq"
    - "$ref": "#/components/parameters/people_filter_last_name_not_eq"
    - "$ref": "#/components/parameters/people_filter_last_name_eql"
    - "$ref": "#/components/parameters/people_filter_last_name_not_eql"
    - "$ref": "#/components/parameters/people_filter_last_name_prefix"
    - "$ref": "#/components/parameters/people_filter_last_name_not_prefix"
    - "$ref": "#/components/parameters/people_filter_last_name_suffix"
    - "$ref": "#/components/parameters/people_filter_last_name_not_suffix"
    - "$ref": "#/components/parameters/people_filter_last_name_match"
    - "$ref": "#/components/parameters/people_filter_last_name_not_match"
    - "$ref": "#/components/parameters/people_filter_nickname_eq"
    - "$ref": "#/components/parameters/people_filter_nickname_not_eq"
    - "$ref": "#/components/parameters/people_filter_nickname_eql"
    - "$ref": "#/components/parameters/people_filter_nickname_not_eql"
    - "$ref": "#/components/parameters/people_filter_nickname_prefix"
    - "$ref": "#/components/parameters/people_filter_nickname_not_prefix"
    - "$ref": "#/components/parameters/people_filter_nickname_suffix"
    - "$ref": "#/components/parameters/people_filter_nickname_not_suffix"
    - "$ref": "#/components/parameters/people_filter_nickname_match"
    - "$ref": "#/components/parameters/people_filter_nickname_not_match"
    - "$ref": "#/components/parameters/people_filter_company_name_eq"
    - "$ref": "#/components/parameters/people_filter_company_name_not_eq"
    - "$ref": "#/components/parameters/people_filter_company_name_eql"
    - "$ref": "#/components/parameters/people_filter_company_name_not_eql"
    - "$ref": "#/components/parameters/people_filter_company_name_prefix"
    - "$ref": "#/components/parameters/people_filter_company_name_not_prefix"
    - "$ref": "#/components/parameters/people_filter_company_name_suffix"
    - "$ref": "#/components/parameters/people_filter_company_name_not_suffix"
    - "$ref": "#/components/parameters/people_filter_company_name_match"
    - "$ref": "#/components/parameters/people_filter_company_name_not_match"
    - "$ref": "#/components/parameters/people_filter_company_eq"
    - "$ref": "#/components/parameters/people_filter_email_eq"
    - "$ref": "#/components/parameters/people_filter_email_not_eq"
    - "$ref": "#/components/parameters/people_filter_email_eql"
    - "$ref": "#/components/parameters/people_filter_email_not_eql"
    - "$ref": "#/components/parameters/people_filter_email_prefix"
    - "$ref": "#/components/parameters/people_filter_email_not_prefix"
    - "$ref": "#/components/parameters/people_filter_email_suffix"
    - "$ref": "#/components/parameters/people_filter_email_not_suffix"
    - "$ref": "#/components/parameters/people_filter_email_match"
    - "$ref": "#/components/parameters/people_filter_email_not_match"
    - "$ref": "#/components/parameters/people_filter_address_eq"
    - "$ref": "#/components/parameters/people_filter_address_not_eq"
    - "$ref": "#/components/parameters/people_filter_address_eql"
    - "$ref": "#/components/parameters/people_filter_address_not_eql"
    - "$ref": "#/components/parameters/people_filter_address_prefix"
    - "$ref": "#/components/parameters/people_filter_address_not_prefix"
    - "$ref": "#/components/parameters/people_filter_address_suffix"
    - "$ref": "#/components/parameters/people_filter_address_not_suffix"
    - "$ref": "#/components/parameters/people_filter_address_match"
    - "$ref": "#/components/parameters/people_filter_address_not_match"
    - "$ref": "#/components/parameters/people_filter_zip_code_eq"
    - "$ref": "#/components/parameters/people_filter_zip_code_not_eq"
    - "$ref": "#/components/parameters/people_filter_zip_code_eql"
    - "$ref": "#/components/parameters/people_filter_zip_code_not_eql"
    - "$ref": "#/components/parameters/people_filter_zip_code_prefix"
    - "$ref": "#/components/parameters/people_filter_zip_code_not_prefix"
    - "$ref": "#/components/parameters/people_filter_zip_code_suffix"
    - "$ref": "#/components/parameters/people_filter_zip_code_not_suffix"
    - "$ref": "#/components/parameters/people_filter_zip_code_match"
    - "$ref": "#/components/parameters/people_filter_zip_code_not_match"
    - "$ref": "#/components/parameters/people_filter_town_eq"
    - "$ref": "#/components/parameters/people_filter_town_not_eq"
    - "$ref": "#/components/parameters/people_filter_town_eql"
    - "$ref": "#/components/parameters/people_filter_town_not_eql"
    - "$ref": "#/components/parameters/people_filter_town_prefix"
    - "$ref": "#/components/parameters/people_filter_town_not_prefix"
    - "$ref": "#/components/parameters/people_filter_town_suffix"
    - "$ref": "#/components/parameters/people_filter_town_not_suffix"
    - "$ref": "#/components/parameters/people_filter_town_match"
    - "$ref": "#/components/parameters/people_filter_town_not_match"
    - "$ref": "#/components/parameters/people_filter_country_eq"
    - "$ref": "#/components/parameters/people_filter_country_not_eq"
    - "$ref": "#/components/parameters/people_filter_country_eql"
    - "$ref": "#/components/parameters/people_filter_country_not_eql"
    - "$ref": "#/components/parameters/people_filter_country_prefix"
    - "$ref": "#/components/parameters/people_filter_country_not_prefix"
    - "$ref": "#/components/parameters/people_filter_country_suffix"
    - "$ref": "#/components/parameters/people_filter_country_not_suffix"
    - "$ref": "#/components/parameters/people_filter_country_match"
    - "$ref": "#/components/parameters/people_filter_country_not_match"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_eq"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_not_eq"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_gt"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_gte"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_lt"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_lte"
    - "$ref": "#/components/parameters/people_filter_gender_eq"
    - "$ref": "#/components/parameters/people_filter_gender_not_eq"
    - "$ref": "#/components/parameters/people_filter_gender_eql"
    - "$ref": "#/components/parameters/people_filter_gender_not_eql"
    - "$ref": "#/components/parameters/people_filter_gender_prefix"
    - "$ref": "#/components/parameters/people_filter_gender_not_prefix"
    - "$ref": "#/components/parameters/people_filter_gender_suffix"
    - "$ref": "#/components/parameters/people_filter_gender_not_suffix"
    - "$ref": "#/components/parameters/people_filter_gender_match"
    - "$ref": "#/components/parameters/people_filter_gender_not_match"
    - "$ref": "#/components/parameters/people_filter_birthday_eq"
    - "$ref": "#/components/parameters/people_filter_birthday_not_eq"
    - "$ref": "#/components/parameters/people_filter_birthday_gt"
    - "$ref": "#/components/parameters/people_filter_birthday_gte"
    - "$ref": "#/components/parameters/people_filter_birthday_lt"
    - "$ref": "#/components/parameters/people_filter_birthday_lte"
    - "$ref": "#/components/parameters/people_filter_language_eq"
    - "$ref": "#/components/parameters/people_filter_language_not_eq"
    - "$ref": "#/components/parameters/people_filter_language_eql"
    - "$ref": "#/components/parameters/people_filter_language_not_eql"
    - "$ref": "#/components/parameters/people_filter_language_prefix"
    - "$ref": "#/components/parameters/people_filter_language_not_prefix"
    - "$ref": "#/components/parameters/people_filter_language_suffix"
    - "$ref": "#/components/parameters/people_filter_language_not_suffix"
    - "$ref": "#/components/parameters/people_filter_language_match"
    - "$ref": "#/components/parameters/people_filter_language_not_match"
    - "$ref": "#/components/parameters/people_filter_updated_at_eq"
    - "$ref": "#/components/parameters/people_filter_updated_at_not_eq"
    - "$ref": "#/components/parameters/people_filter_updated_at_gt"
    - "$ref": "#/components/parameters/people_filter_updated_at_gte"
    - "$ref": "#/components/parameters/people_filter_updated_at_lt"
    - "$ref": "#/components/parameters/people_filter_updated_at_lte"
    - "$ref": "#/components/parameters/groups_fields"
    - "$ref": "#/components/parameters/roles_fields"
    - "$ref": "#/components/parameters/phone_numbers_fields"
    - "$ref": "#/components/parameters/social_accounts_fields"
    - "$ref": "#/components/parameters/additional_emails_fields"
    get:
      operationId: listPeople
      summary: List People
      tags:
      - people
      responses:
        '200':
          "$ref": "#/components/responses/people_200_collection"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
  "/api/people/{id}":
    parameters:
    - "$ref": "#/components/parameters/people_id"
    - "$ref": "#/components/parameters/people_include"
    - "$ref": "#/components/parameters/people_sort"
    - "$ref": "#/components/parameters/people_fields"
    - "$ref": "#/components/parameters/people_filter_id_eq"
    - "$ref": "#/components/parameters/people_filter_id_not_eq"
    - "$ref": "#/components/parameters/people_filter_id_gt"
    - "$ref": "#/components/parameters/people_filter_id_gte"
    - "$ref": "#/components/parameters/people_filter_id_lt"
    - "$ref": "#/components/parameters/people_filter_id_lte"
    - "$ref": "#/components/parameters/people_filter_first_name_eq"
    - "$ref": "#/components/parameters/people_filter_first_name_not_eq"
    - "$ref": "#/components/parameters/people_filter_first_name_eql"
    - "$ref": "#/components/parameters/people_filter_first_name_not_eql"
    - "$ref": "#/components/parameters/people_filter_first_name_prefix"
    - "$ref": "#/components/parameters/people_filter_first_name_not_prefix"
    - "$ref": "#/components/parameters/people_filter_first_name_suffix"
    - "$ref": "#/components/parameters/people_filter_first_name_not_suffix"
    - "$ref": "#/components/parameters/people_filter_first_name_match"
    - "$ref": "#/components/parameters/people_filter_first_name_not_match"
    - "$ref": "#/components/parameters/people_filter_last_name_eq"
    - "$ref": "#/components/parameters/people_filter_last_name_not_eq"
    - "$ref": "#/components/parameters/people_filter_last_name_eql"
    - "$ref": "#/components/parameters/people_filter_last_name_not_eql"
    - "$ref": "#/components/parameters/people_filter_last_name_prefix"
    - "$ref": "#/components/parameters/people_filter_last_name_not_prefix"
    - "$ref": "#/components/parameters/people_filter_last_name_suffix"
    - "$ref": "#/components/parameters/people_filter_last_name_not_suffix"
    - "$ref": "#/components/parameters/people_filter_last_name_match"
    - "$ref": "#/components/parameters/people_filter_last_name_not_match"
    - "$ref": "#/components/parameters/people_filter_nickname_eq"
    - "$ref": "#/components/parameters/people_filter_nickname_not_eq"
    - "$ref": "#/components/parameters/people_filter_nickname_eql"
    - "$ref": "#/components/parameters/people_filter_nickname_not_eql"
    - "$ref": "#/components/parameters/people_filter_nickname_prefix"
    - "$ref": "#/components/parameters/people_filter_nickname_not_prefix"
    - "$ref": "#/components/parameters/people_filter_nickname_suffix"
    - "$ref": "#/components/parameters/people_filter_nickname_not_suffix"
    - "$ref": "#/components/parameters/people_filter_nickname_match"
    - "$ref": "#/components/parameters/people_filter_nickname_not_match"
    - "$ref": "#/components/parameters/people_filter_company_name_eq"
    - "$ref": "#/components/parameters/people_filter_company_name_not_eq"
    - "$ref": "#/components/parameters/people_filter_company_name_eql"
    - "$ref": "#/components/parameters/people_filter_company_name_not_eql"
    - "$ref": "#/components/parameters/people_filter_company_name_prefix"
    - "$ref": "#/components/parameters/people_filter_company_name_not_prefix"
    - "$ref": "#/components/parameters/people_filter_company_name_suffix"
    - "$ref": "#/components/parameters/people_filter_company_name_not_suffix"
    - "$ref": "#/components/parameters/people_filter_company_name_match"
    - "$ref": "#/components/parameters/people_filter_company_name_not_match"
    - "$ref": "#/components/parameters/people_filter_company_eq"
    - "$ref": "#/components/parameters/people_filter_email_eq"
    - "$ref": "#/components/parameters/people_filter_email_not_eq"
    - "$ref": "#/components/parameters/people_filter_email_eql"
    - "$ref": "#/components/parameters/people_filter_email_not_eql"
    - "$ref": "#/components/parameters/people_filter_email_prefix"
    - "$ref": "#/components/parameters/people_filter_email_not_prefix"
    - "$ref": "#/components/parameters/people_filter_email_suffix"
    - "$ref": "#/components/parameters/people_filter_email_not_suffix"
    - "$ref": "#/components/parameters/people_filter_email_match"
    - "$ref": "#/components/parameters/people_filter_email_not_match"
    - "$ref": "#/components/parameters/people_filter_address_eq"
    - "$ref": "#/components/parameters/people_filter_address_not_eq"
    - "$ref": "#/components/parameters/people_filter_address_eql"
    - "$ref": "#/components/parameters/people_filter_address_not_eql"
    - "$ref": "#/components/parameters/people_filter_address_prefix"
    - "$ref": "#/components/parameters/people_filter_address_not_prefix"
    - "$ref": "#/components/parameters/people_filter_address_suffix"
    - "$ref": "#/components/parameters/people_filter_address_not_suffix"
    - "$ref": "#/components/parameters/people_filter_address_match"
    - "$ref": "#/components/parameters/people_filter_address_not_match"
    - "$ref": "#/components/parameters/people_filter_zip_code_eq"
    - "$ref": "#/components/parameters/people_filter_zip_code_not_eq"
    - "$ref": "#/components/parameters/people_filter_zip_code_eql"
    - "$ref": "#/components/parameters/people_filter_zip_code_not_eql"
    - "$ref": "#/components/parameters/people_filter_zip_code_prefix"
    - "$ref": "#/components/parameters/people_filter_zip_code_not_prefix"
    - "$ref": "#/components/parameters/people_filter_zip_code_suffix"
    - "$ref": "#/components/parameters/people_filter_zip_code_not_suffix"
    - "$ref": "#/components/parameters/people_filter_zip_code_match"
    - "$ref": "#/components/parameters/people_filter_zip_code_not_match"
    - "$ref": "#/components/parameters/people_filter_town_eq"
    - "$ref": "#/components/parameters/people_filter_town_not_eq"
    - "$ref": "#/components/parameters/people_filter_town_eql"
    - "$ref": "#/components/parameters/people_filter_town_not_eql"
    - "$ref": "#/components/parameters/people_filter_town_prefix"
    - "$ref": "#/components/parameters/people_filter_town_not_prefix"
    - "$ref": "#/components/parameters/people_filter_town_suffix"
    - "$ref": "#/components/parameters/people_filter_town_not_suffix"
    - "$ref": "#/components/parameters/people_filter_town_match"
    - "$ref": "#/components/parameters/people_filter_town_not_match"
    - "$ref": "#/components/parameters/people_filter_country_eq"
    - "$ref": "#/components/parameters/people_filter_country_not_eq"
    - "$ref": "#/components/parameters/people_filter_country_eql"
    - "$ref": "#/components/parameters/people_filter_country_not_eql"
    - "$ref": "#/components/parameters/people_filter_country_prefix"
    - "$ref": "#/components/parameters/people_filter_country_not_prefix"
    - "$ref": "#/components/parameters/people_filter_country_suffix"
    - "$ref": "#/components/parameters/people_filter_country_not_suffix"
    - "$ref": "#/components/parameters/people_filter_country_match"
    - "$ref": "#/components/parameters/people_filter_country_not_match"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_eq"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_not_eq"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_gt"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_gte"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_lt"
    - "$ref": "#/components/parameters/people_filter_primary_group_id_lte"
    - "$ref": "#/components/parameters/people_filter_gender_eq"
    - "$ref": "#/components/parameters/people_filter_gender_not_eq"
    - "$ref": "#/components/parameters/people_filter_gender_eql"
    - "$ref": "#/components/parameters/people_filter_gender_not_eql"
    - "$ref": "#/components/parameters/people_filter_gender_prefix"
    - "$ref": "#/components/parameters/people_filter_gender_not_prefix"
    - "$ref": "#/components/parameters/people_filter_gender_suffix"
    - "$ref": "#/components/parameters/people_filter_gender_not_suffix"
    - "$ref": "#/components/parameters/people_filter_gender_match"
    - "$ref": "#/components/parameters/people_filter_gender_not_match"
    - "$ref": "#/components/parameters/people_filter_birthday_eq"
    - "$ref": "#/components/parameters/people_filter_birthday_not_eq"
    - "$ref": "#/components/parameters/people_filter_birthday_gt"
    - "$ref": "#/components/parameters/people_filter_birthday_gte"
    - "$ref": "#/components/parameters/people_filter_birthday_lt"
    - "$ref": "#/components/parameters/people_filter_birthday_lte"
    - "$ref": "#/components/parameters/people_filter_language_eq"
    - "$ref": "#/components/parameters/people_filter_language_not_eq"
    - "$ref": "#/components/parameters/people_filter_language_eql"
    - "$ref": "#/components/parameters/people_filter_language_not_eql"
    - "$ref": "#/components/parameters/people_filter_language_prefix"
    - "$ref": "#/components/parameters/people_filter_language_not_prefix"
    - "$ref": "#/components/parameters/people_filter_language_suffix"
    - "$ref": "#/components/parameters/people_filter_language_not_suffix"
    - "$ref": "#/components/parameters/people_filter_language_match"
    - "$ref": "#/components/parameters/people_filter_language_not_match"
    - "$ref": "#/components/parameters/people_filter_updated_at_eq"
    - "$ref": "#/components/parameters/people_filter_updated_at_not_eq"
    - "$ref": "#/components/parameters/people_filter_updated_at_gt"
    - "$ref": "#/components/parameters/people_filter_updated_at_gte"
    - "$ref": "#/components/parameters/people_filter_updated_at_lt"
    - "$ref": "#/components/parameters/people_filter_updated_at_lte"
    - "$ref": "#/components/parameters/groups_fields"
    - "$ref": "#/components/parameters/roles_fields"
    - "$ref": "#/components/parameters/phone_numbers_fields"
    - "$ref": "#/components/parameters/social_accounts_fields"
    - "$ref": "#/components/parameters/additional_emails_fields"
    get:
      operationId: getPerson
      summary: Fetch Person
      tags:
      - people
      responses:
        '200':
          "$ref": "#/components/responses/people_200"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    put:
      operationId: updatePerson
      summary: Update Person
      tags:
      - people
      responses:
        '200':
          "$ref": "#/components/responses/people_200"
        '202':
          "$ref": "#/components/responses/202"
        '204':
          "$ref": "#/components/responses/204"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/409"
        '404':
          "$ref": "#/components/responses/404"
        '422':
          "$ref": "#/components/responses/422"
      requestBody:
        "$ref": "#/components/requestBodies/people"
  "/api/roles":
    parameters:
    - "$ref": "#/components/parameters/roles_include"
    - "$ref": "#/components/parameters/roles_sort"
    - "$ref": "#/components/parameters/roles_fields"
    - "$ref": "#/components/parameters/roles_filter_id_eq"
    - "$ref": "#/components/parameters/roles_filter_id_not_eq"
    - "$ref": "#/components/parameters/roles_filter_id_gt"
    - "$ref": "#/components/parameters/roles_filter_id_gte"
    - "$ref": "#/components/parameters/roles_filter_id_lt"
    - "$ref": "#/components/parameters/roles_filter_id_lte"
    - "$ref": "#/components/parameters/roles_filter_created_at_eq"
    - "$ref": "#/components/parameters/roles_filter_created_at_not_eq"
    - "$ref": "#/components/parameters/roles_filter_created_at_gt"
    - "$ref": "#/components/parameters/roles_filter_created_at_gte"
    - "$ref": "#/components/parameters/roles_filter_created_at_lt"
    - "$ref": "#/components/parameters/roles_filter_created_at_lte"
    - "$ref": "#/components/parameters/roles_filter_updated_at_eq"
    - "$ref": "#/components/parameters/roles_filter_updated_at_not_eq"
    - "$ref": "#/components/parameters/roles_filter_updated_at_gt"
    - "$ref": "#/components/parameters/roles_filter_updated_at_gte"
    - "$ref": "#/components/parameters/roles_filter_updated_at_lt"
    - "$ref": "#/components/parameters/roles_filter_updated_at_lte"
    - "$ref": "#/components/parameters/roles_filter_start_on_eq"
    - "$ref": "#/components/parameters/roles_filter_start_on_not_eq"
    - "$ref": "#/components/parameters/roles_filter_start_on_gt"
    - "$ref": "#/components/parameters/roles_filter_start_on_gte"
    - "$ref": "#/components/parameters/roles_filter_start_on_lt"
    - "$ref": "#/components/parameters/roles_filter_start_on_lte"
    - "$ref": "#/components/parameters/roles_filter_end_on_eq"
    - "$ref": "#/components/parameters/roles_filter_end_on_not_eq"
    - "$ref": "#/components/parameters/roles_filter_end_on_gt"
    - "$ref": "#/components/parameters/roles_filter_end_on_gte"
    - "$ref": "#/components/parameters/roles_filter_end_on_lt"
    - "$ref": "#/components/parameters/roles_filter_end_on_lte"
    - "$ref": "#/components/parameters/roles_filter_person_id_eq"
    - "$ref": "#/components/parameters/roles_filter_person_id_not_eq"
    - "$ref": "#/components/parameters/roles_filter_person_id_gt"
    - "$ref": "#/components/parameters/roles_filter_person_id_gte"
    - "$ref": "#/components/parameters/roles_filter_person_id_lt"
    - "$ref": "#/components/parameters/roles_filter_person_id_lte"
    - "$ref": "#/components/parameters/roles_filter_group_id_eq"
    - "$ref": "#/components/parameters/roles_filter_group_id_not_eq"
    - "$ref": "#/components/parameters/roles_filter_group_id_gt"
    - "$ref": "#/components/parameters/roles_filter_group_id_gte"
    - "$ref": "#/components/parameters/roles_filter_group_id_lt"
    - "$ref": "#/components/parameters/roles_filter_group_id_lte"
    - "$ref": "#/components/parameters/roles_filter_type_eq"
    - "$ref": "#/components/parameters/roles_filter_type_not_eq"
    - "$ref": "#/components/parameters/roles_filter_type_eql"
    - "$ref": "#/components/parameters/roles_filter_type_not_eql"
    - "$ref": "#/components/parameters/roles_filter_type_prefix"
    - "$ref": "#/components/parameters/roles_filter_type_not_prefix"
    - "$ref": "#/components/parameters/roles_filter_type_suffix"
    - "$ref": "#/components/parameters/roles_filter_type_not_suffix"
    - "$ref": "#/components/parameters/roles_filter_type_match"
    - "$ref": "#/components/parameters/roles_filter_type_not_match"
    - "$ref": "#/components/parameters/roles_filter_label_eq"
    - "$ref": "#/components/parameters/roles_filter_label_not_eq"
    - "$ref": "#/components/parameters/roles_filter_label_eql"
    - "$ref": "#/components/parameters/roles_filter_label_not_eql"
    - "$ref": "#/components/parameters/roles_filter_label_prefix"
    - "$ref": "#/components/parameters/roles_filter_label_not_prefix"
    - "$ref": "#/components/parameters/roles_filter_label_suffix"
    - "$ref": "#/components/parameters/roles_filter_label_not_suffix"
    - "$ref": "#/components/parameters/roles_filter_label_match"
    - "$ref": "#/components/parameters/roles_filter_label_not_match"
    - "$ref": "#/components/parameters/people_fields"
    - "$ref": "#/components/parameters/groups_fields"
    get:
      operationId: listRoles
      summary: List Roles
      tags:
      - roles
      responses:
        '200':
          "$ref": "#/components/responses/roles_200_collection"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
    post:
      operationId: createRole
      summary: Create Role
      tags:
      - roles
      responses:
        '201':
          "$ref": "#/components/responses/roles_201"
        '202':
          "$ref": "#/components/responses/202"
        '204':
          "$ref": "#/components/responses/204"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/409"
        '422':
          "$ref": "#/components/responses/422"
      requestBody:
        "$ref": "#/components/requestBodies/roles"
  "/api/roles/{id}":
    parameters:
    - "$ref": "#/components/parameters/roles_id"
    - "$ref": "#/components/parameters/roles_include"
    - "$ref": "#/components/parameters/roles_sort"
    - "$ref": "#/components/parameters/roles_fields"
    - "$ref": "#/components/parameters/roles_filter_id_eq"
    - "$ref": "#/components/parameters/roles_filter_id_not_eq"
    - "$ref": "#/components/parameters/roles_filter_id_gt"
    - "$ref": "#/components/parameters/roles_filter_id_gte"
    - "$ref": "#/components/parameters/roles_filter_id_lt"
    - "$ref": "#/components/parameters/roles_filter_id_lte"
    - "$ref": "#/components/parameters/roles_filter_created_at_eq"
    - "$ref": "#/components/parameters/roles_filter_created_at_not_eq"
    - "$ref": "#/components/parameters/roles_filter_created_at_gt"
    - "$ref": "#/components/parameters/roles_filter_created_at_gte"
    - "$ref": "#/components/parameters/roles_filter_created_at_lt"
    - "$ref": "#/components/parameters/roles_filter_created_at_lte"
    - "$ref": "#/components/parameters/roles_filter_updated_at_eq"
    - "$ref": "#/components/parameters/roles_filter_updated_at_not_eq"
    - "$ref": "#/components/parameters/roles_filter_updated_at_gt"
    - "$ref": "#/components/parameters/roles_filter_updated_at_gte"
    - "$ref": "#/components/parameters/roles_filter_updated_at_lt"
    - "$ref": "#/components/parameters/roles_filter_updated_at_lte"
    - "$ref": "#/components/parameters/roles_filter_start_on_eq"
    - "$ref": "#/components/parameters/roles_filter_start_on_not_eq"
    - "$ref": "#/components/parameters/roles_filter_start_on_gt"
    - "$ref": "#/components/parameters/roles_filter_start_on_gte"
    - "$ref": "#/components/parameters/roles_filter_start_on_lt"
    - "$ref": "#/components/parameters/roles_filter_start_on_lte"
    - "$ref": "#/components/parameters/roles_filter_end_on_eq"
    - "$ref": "#/components/parameters/roles_filter_end_on_not_eq"
    - "$ref": "#/components/parameters/roles_filter_end_on_gt"
    - "$ref": "#/components/parameters/roles_filter_end_on_gte"
    - "$ref": "#/components/parameters/roles_filter_end_on_lt"
    - "$ref": "#/components/parameters/roles_filter_end_on_lte"
    - "$ref": "#/components/parameters/roles_filter_person_id_eq"
    - "$ref": "#/components/parameters/roles_filter_person_id_not_eq"
    - "$ref": "#/components/parameters/roles_filter_person_id_gt"
    - "$ref": "#/components/parameters/roles_filter_person_id_gte"
    - "$ref": "#/components/parameters/roles_filter_person_id_lt"
    - "$ref": "#/components/parameters/roles_filter_person_id_lte"
    - "$ref": "#/components/parameters/roles_filter_group_id_eq"
    - "$ref": "#/components/parameters/roles_filter_group_id_not_eq"
    - "$ref": "#/components/parameters/roles_filter_group_id_gt"
    - "$ref": "#/components/parameters/roles_filter_group_id_gte"
    - "$ref": "#/components/parameters/roles_filter_group_id_lt"
    - "$ref": "#/components/parameters/roles_filter_group_id_lte"
    - "$ref": "#/components/parameters/roles_filter_type_eq"
    - "$ref": "#/components/parameters/roles_filter_type_not_eq"
    - "$ref": "#/components/parameters/roles_filter_type_eql"
    - "$ref": "#/components/parameters/roles_filter_type_not_eql"
    - "$ref": "#/components/parameters/roles_filter_type_prefix"
    - "$ref": "#/components/parameters/roles_filter_type_not_prefix"
    - "$ref": "#/components/parameters/roles_filter_type_suffix"
    - "$ref": "#/components/parameters/roles_filter_type_not_suffix"
    - "$ref": "#/components/parameters/roles_filter_type_match"
    - "$ref": "#/components/parameters/roles_filter_type_not_match"
    - "$ref": "#/components/parameters/roles_filter_label_eq"
    - "$ref": "#/components/parameters/roles_filter_label_not_eq"
    - "$ref": "#/components/parameters/roles_filter_label_eql"
    - "$ref": "#/components/parameters/roles_filter_label_not_eql"
    - "$ref": "#/components/parameters/roles_filter_label_prefix"
    - "$ref": "#/components/parameters/roles_filter_label_not_prefix"
    - "$ref": "#/components/parameters/roles_filter_label_suffix"
    - "$ref": "#/components/parameters/roles_filter_label_not_suffix"
    - "$ref": "#/components/parameters/roles_filter_label_match"
    - "$ref": "#/components/parameters/roles_filter_label_not_match"
    - "$ref": "#/components/parameters/people_fields"
    - "$ref": "#/components/parameters/groups_fields"
    get:
      operationId: getRole
      summary: Fetch Role
      tags:
      - roles
      responses:
        '200':
          "$ref": "#/components/responses/roles_200"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
    put:
      operationId: updateRole
      summary: Update Role
      tags:
      - roles
      responses:
        '200':
          "$ref": "#/components/responses/roles_200"
        '202':
          "$ref": "#/components/responses/202"
        '204':
          "$ref": "#/components/responses/204"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/409"
        '404':
          "$ref": "#/components/responses/404"
        '422':
          "$ref": "#/components/responses/422"
      requestBody:
        "$ref": "#/components/requestBodies/roles"
    delete:
      operationId: deleteRole
      summary: Destroy Role
      tags:
      - roles
      responses:
        '200':
          "$ref": "#/components/responses/200"
        '202':
          "$ref": "#/components/responses/202"
        '204':
          "$ref": "#/components/responses/204"
        '401':
          "$ref": "#/components/responses/401"
        '403':
          "$ref": "#/components/responses/403"
        '404':
          "$ref": "#/components/responses/404"
...
